<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>Godot 基于 C# 创建类饥荒摄像机视角</title>
      <link href="/2024/06/01/godot-dontstarve-cam/"/>
      <url>/2024/06/01/godot-dontstarve-cam/</url>
      
        <content type="html"><![CDATA[<h1 id="该文章正在撰写中">该文章正在撰写中…</h1><h2 id="前言">前言</h2><p>最近在学习 Godot 游戏开发，速成了一下制作了自己的第一个demo，整个过程还是蛮开心的，拿出来跟大伙分享下。</p><p>顺便分享个独立游戏开发素材站，做独立的大佬们应该都知道这个网站：</p><div calss='anzhiyu-tag-link'><a class="tag-Link" target="_blank" href="https://itch.io">    <div class="tag-link-tips">引用站外地址</div>    <div class="tag-link-bottom">        <div class="tag-link-left" style="background-image: url(https://static.itch.io/images/itchio-textless-black.svg)">          <i class="anzhiyufont anzhiyu-icon-link" style="display: none"></i>        </div>        <div class="tag-link-right">            <div class="tag-link-title">itch.io</div>            <div class="tag-link-sitename"> itch.io is a simple way to find and download and distribute indie games online. Whether you're a developer looking to upload your game or just someone looking for something new to play itch.io has you covered.</div>        </div>        <i class="anzhiyufont anzhiyu-icon-angle-right"></i>    </div>    </a></div><h2 id="需求分析">需求分析</h2><ul><li>WSAD 控制角色移动</li><li>上下控制 FOV 缩放，并限制 FOV 缩放最大值和最小值</li><li>左右控制视角旋转，按一次旋转90度，按4次回到原视角</li></ul><h2 id="场景构建">场景构建</h2><ol type="1"><li>创建个 3D 场景，创建一个 CharacterBody3D节点作为我们当前场景的根节点，将角色的材质导入并配置刚体(CollisionShape3D)，若想做的精致点也可以顺便配置下AnimationTree。</li><li>在根节点下创建 Node3D子节点，作为摄像机的根节点(camroot)，camroot节点下创建控制水平方向的Node3D 节点(h)， h节点下创建控制垂直方向的 SpringArm3D节点(v)，v节点下创建 Camera3D 节点</li></ol><h2 id="代码实现">代码实现</h2><h2 id="总结">总结</h2><h2 id="trouble-shooting">Trouble Shooting</h2>]]></content>
      
      
      <categories>
          
          <category> 编程开发 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>蛇贸易汉化 macOS 汉化移植版</title>
      <link href="/2024/06/01/%E8%9B%87%E8%B4%B8%E6%98%93%E6%B1%89%E5%8C%96%E7%A7%BB%E6%A4%8D/"/>
      <url>/2024/06/01/%E8%9B%87%E8%B4%B8%E6%98%93%E6%B1%89%E5%8C%96%E7%A7%BB%E6%A4%8D/</url>
      
        <content type="html"><![CDATA[<h2id="这是一个在沙漠中通过销售水之类的物品赚取金钱的游戏">这是一个在沙漠中，通过销售水之类的物品赚取金钱的游戏。</h2><p>本作品由 MIDORIKAWA 制作,发布于 <ahref="">https://game.nicovideo.jp/atsumaru/games/gm10798</a>的游戏</p><p>基于 好人汉化组汉化版  打包制作</p><ol type="1"><li>常见问题</li></ol><p>如果是第一次执行，可能会遇到错误，提示安全风险或者包内容已经损坏。回到游戏文件夹，打开终端，执行这个命令：</p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">sudo xattr -r -d com.apple.quarantine /Applications/蛇贸易.app</span><br></pre></td></tr></table></figure><ol start="2" type="1"><li><p>移植人员名单</p><ul><li><p>还没有名字的移植组</p><ul><li>macOS移植：<ahref="https://www.bilibili.com/read/cv24543110">迷失的小K</a></li></ul></li><li><p>好人汉化组</p><ul><li>翻译：好人Ⅲ[Lyra]</li><li>测试：鲟鱼子 JH 逆风使者</li></ul></li></ul></li><li><p>更新说明</p></li></ol><div class="note default flat"><p>6.25更新： 首个Release，未来基本无更新</p></div><ol start="4" type="1"><li>屏幕截图</li></ol><img src="https://kclub-phost-1313107835.cos.ap-nanjing.myqcloud.com/Phost/_posts/smy1.avif"><img src="https://kclub-phost-1313107835.cos.ap-nanjing.myqcloud.com/Phost/_posts/smy2.avif"><ol start="5" type="1"><li>下载链接</li></ol><div calss='anzhiyu-tag-link'><a class="tag-Link" target="_blank" href="https://pan.baidu.com/s/1CEJssh00fLcy0DETo_D79g?pwd=SMYN">    <div class="tag-link-tips">引用站外地址</div>    <div class="tag-link-bottom">        <div class="tag-link-left" style="">          <i class="anzhiyufont anzhiyu-icon-link" style=""></i>        </div>        <div class="tag-link-right">            <div class="tag-link-title">百度网盘</div>            <div class="tag-link-sitename"> 提取码: SMYN</div>        </div>        <i class="anzhiyufont anzhiyu-icon-angle-right"></i>    </div>    </a></div>]]></content>
      
      
      <categories>
          
          <category> 瞎玩折腾 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 蛇贸易 </tag>
            
            <tag> 游戏移植 </tag>
            
            <tag> macOS </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ヘビの命（蛇之命）macOS汉化移植版</title>
      <link href="/2024/05/20/%E8%9B%87%E4%B9%8B%E5%91%BD%E6%B1%89%E5%8C%96%E7%A7%BB%E6%A4%8D/"/>
      <url>/2024/05/20/%E8%9B%87%E4%B9%8B%E5%91%BD%E6%B1%89%E5%8C%96%E7%A7%BB%E6%A4%8D/</url>
      
        <content type="html"><![CDATA[<ol type="1"><li>游戏简介</li></ol><p>本作品由 MIDORIKAWA 制作</p><p>发布于 <ahref="https://game.nicovideo.jp/atsumaru/games/gm14163">https://game.nicovideo.jp/atsumaru/games/gm14163</a>的游戏</p><p>推荐喜欢逆转裁判的玩家来玩w</p><p>基于 地下龙龙汉化版 打包制作，兼容 Intel(旧版) 和 ARM Apple (M1/M2)平台</p><ol start="2" type="1"><li><p>移植人员名单</p><ul><li><p>还没有名字的移植组</p><ul><li>macOS移植： <ahref="https://www.bilibili.com/read/cv23555407/">迷失的小K</a></li></ul></li><li><p>地下龙龙汉化组</p><ul><li><p>主翻：@文镇先生</p></li><li><p>程序：@一包个糖丶</p></li><li><p>副翻/润色/宣传：似水流年さん</p></li><li><p>美工：彩乃</p></li><li><p>翻译指导：饺</p></li><li><p>协助润色：spoon</p></li></ul></li></ul></li><li><p>更新说明</p></li></ol><div class="note default flat"><p>5.8更新： 首个Release，未来基本无更新</p></div><ol start="4" type="1"><li>游戏截图</li></ol><img src="https://kclub-phost-1313107835.cos.ap-nanjing.myqcloud.com/Phost/_posts/szm.avif" alt="菜单截图"><img src="https://kclub-phost-1313107835.cos.ap-nanjing.myqcloud.com/Phost/_posts/szm2.avif" alt="游戏内截图"><ol start="5" type="1"><li>下载链接</li></ol><div class="tip info"><p>由于DMG设置密码较为复杂故未设置，但请一定要多多支持原作者的其他作品哟～</p></div><div calss='anzhiyu-tag-link'><a class="tag-Link" target="_blank" href="https://pan.baidu.com/s/1ds_XOxPiOumVroATpcuR0g">    <div class="tag-link-tips">引用站外地址</div>    <div class="tag-link-bottom">        <div class="tag-link-left" style="">          <i class="anzhiyufont anzhiyu-icon-link" style=""></i>        </div>        <div class="tag-link-right">            <div class="tag-link-title">百度网盘</div>            <div class="tag-link-sitename"> 提取码: KIDO</div>        </div>        <i class="anzhiyufont anzhiyu-icon-angle-right"></i>    </div>    </a></div>]]></content>
      
      
      <categories>
          
          <category> 瞎玩折腾 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 蛇之命 </tag>
            
            <tag> 游戏移植 </tag>
            
            <tag> macOS </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>本地快速部署文生文AI</title>
      <link href="/2024/03/15/%E6%9C%AC%E5%9C%B0%E5%BF%AB%E9%80%9F%E9%83%A8%E7%BD%B2%E6%96%87%E7%94%9F%E6%96%87AI/"/>
      <url>/2024/03/15/%E6%9C%AC%E5%9C%B0%E5%BF%AB%E9%80%9F%E9%83%A8%E7%BD%B2%E6%96%87%E7%94%9F%E6%96%87AI/</url>
      
        <content type="html"><![CDATA[<h2 id="前言">前言</h2><p>当我们在网上搜索关于 “如何本地部署 text-generation-ai”时，你大概率会看到要求你不仅下载 Conda，而且还要自行创建 Conda环境，并安装对应的依赖包。</p><p>这种方法虽然可行，但实际上，该项目的官方已经提供了一个更加便捷、高效的方法，而且自动下载Conda及其软件包，软件包也会部署在项目对应的指定文件夹内，方便管理，且支持在线升级，那么我们为什么还要自己手动配置呢？</p><h2 id="部署">部署</h2><ol type="1"><li><p>部署的方法很简单，当我们下载好项目后，只需要到目录下，根据你的系统（如：macos、linux、Windows和 WSL），进入终端启动对应的脚本即可。</p> <figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git <span class="built_in">clone</span> https://github.com/oobabooga/text-generation-webui.git</span><br><span class="line"></span><br><span class="line"><span class="built_in">cd</span> text-generation-webui</span><br><span class="line"></span><br><span class="line"><span class="comment"># macos</span></span><br><span class="line">./start_macos.sh</span><br><span class="line"></span><br><span class="line"><span class="comment"># Windows</span></span><br><span class="line">.\start_windows.bat</span><br><span class="line"></span><br><span class="line"><span class="comment"># 同时兼容 WSL （Windows Subsystem for Linux）</span></span><br><span class="line">.\start_wsl.bat</span><br></pre></td></tr></table></figure></li><li><p>当执行脚本后会要求选择 GPU类型，根据自己的情况选择，网络不佳请自行更换 PyPI源或启用加速器。</p></li><li><p>安装完成后，默认的链接为:<code>http://localhost:7860/</code></p></li></ol><h2 id="使用">使用</h2><p>当我们安装完成后，进入前端是无法直接使用的，我们需要在<code>Model</code> 中配置模型</p><ol type="1"><li>点击 Model</li><li>打开 <a href="https://huggingface.co/">Hugging Face</a></li><li>寻找合适的模型，复制模型名(e.g. google/gemma-7b) 到<code>Download model or LoRA</code> 文本框并点击 Download</li><li>网页中无法看到下载进度，在终端中查看下载进度</li><li>下载完成后，在左上角 Model 下点击None，选择刚刚下载好的模型，并点击右侧的 Load</li><li>等待加载完成后就可以回到主页正常使用了</li></ol><h2 id="troubleshooting">Troubleshooting</h2><ol type="1"><li>当我们的 loader 为 Transformers 时，建议打开 8bit 或 4bit对模型进行量化，通过降低精度提高 tps</li><li>升级请使用脚本 <code>update_wizard_linux.sh</code>,<code>update_wizard_windows.bat</code>,<code>update_wizard_macos.sh</code>, 或<code>update_wizard_wsl.bat</code></li></ol><h2 id="参考文献">参考文献</h2><p><ahref="https://github.com/oobabooga/text-generation-webui">text-generation-webui</a></p>]]></content>
      
      
      <categories>
          
          <category> 瞎玩折腾 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> AI </tag>
            
            <tag> 文生文 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>2023年终总结</title>
      <link href="/2024/03/05/2023%E5%B9%B4%E7%BB%88%E6%80%BB%E7%BB%93/"/>
      <url>/2024/03/05/2023%E5%B9%B4%E7%BB%88%E6%80%BB%E7%BB%93/</url>
      
        <content type="html"><![CDATA[<p>这一年经历太多了，今天想了很多，跟大家说点心里话，回望看刚好是我转专业成功一周年，不得不感叹岁月如梭……</p><p>回想当年从刚开始的连静态网站都不会部署，到逐步自己创建社团，参加会议，学会了前端、人工智能和NAS等野鸡技术后，度过了一段抑郁期，又重新振作开始学习。这一年我做了很多事，但也少不了做错很多事，尤其在我生病的那段时间。</p><p>那么首先这一年我想感谢的就是我们社团的负责老师和两位副社长潘富和谈和鑫，病的那段时间我基本上是一个孤岛，每天都在抑郁，没有履行自己作为社长的责任，那段时间基本上都是两位同学在忙，而我每天除了窝在被子里哭什么也不做，但因为老师和同学的努力，才让社团有了现在的样子，对不起。经过服药治疗半年后，我的精神状态趋于好转，我也希望能将更多的精力投身到社团建设当中去。</p><p>之后当然就是要感谢我的父母，陪我做手术，跟我打电话，他们虽然从小都没有陪我太多，因为他们太忙了，但当我出现问题的时候，他们永远都是第一个出现在我身边的，这也是家人的意义吧。他们一直都是鼓励式教育，跟我说不要压力太大，不用追求做到多好，不用在乎别人的眼光每个人都不一样等等，自从我的双向情感障碍治好后，我经常跟父母打电话，或许是以前我没意识到，但现在我才知道家人的重要性。</p><p>当然还少不了我的朋友。先说学长吧，对不起学长，那天雨天晚上网吧门口，我不应该把你自己一个人丢在那里，那几天出去玩由于我没吃药导致整个精神状态都比较魔幻，希望你能原谅我，今年你就要毕业了，是你带我认识了南阳，是你让我熟悉了这里的环境，慢慢踏实了下来，你是我大学期间最好的朋友。最不舍得的就是离别啊，你毕业后其实我很慌的，偷偷告诉你因为这事我还哭过哈哈哈哈，希望你毕业以后一切顺利，常联系。还有两位网上认识的好朋友，虽然老师都说不要随便跟网友联系，但或许我比较幸运吧认识了几位好朋友，他们也在我低靡期鼓励我，开车带我出去玩，陪我出去散步散心，那一年其实根本没有人抱过我，那个鼓励我的拥抱我会一直记住的！我希望让你知道是你让我再次好起来的！谢谢！</p><p>最后，我想……谢谢我的前任吧，虽然已经分手了，说太多不好，但是我还是要说，谢谢你给我的教训，如果不是你的话，我不会成长如此之快。刚分手那段时间我每天都提醒自己：不要再想你了，不要再想你了。但我说实话，根本不可能，除非给我一棒子让我失忆，后来我想明白了，真正放下一个人不是忘记，而是认真的好好生活下去，感谢存在过的时光。</p><p>又是新的一年，又飞出了家乡，我不敢回头看父母的身影，因为我是个爱哭鬼，我怕我一回头会流泪，再次见面又要到25年新年了啊。不过我不希望辜负任何一个人对我的期望，所以我坚定的向前走了，今年开年一切都很顺利，学完了数据分析的基础，报名了建模比赛，大学英语竞赛，准备考两个证，自己也重新投入到社团工作中去了，我不希望今年会多好，只希望所有人都能一切顺利！</p><p>大家新年快乐！</p><p>封面画师：<ahref="https://www.pixiv.net/users/53255280">らふぇ</a></p><p>插画链接：<ahref="https://www.pixiv.net/artworks/102861678">点我跳转</a></p>]]></content>
      
      
      <categories>
          
          <category> 年终总结 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 2023 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Android 刷机入门教程</title>
      <link href="/2024/02/05/Android%E5%88%B7%E6%9C%BA%E5%85%A5%E9%97%A8%E6%95%99%E7%A8%8B/"/>
      <url>/2024/02/05/Android%E5%88%B7%E6%9C%BA%E5%85%A5%E9%97%A8%E6%95%99%E7%A8%8B/</url>
      
        <content type="html"><![CDATA[<h2 id="前言">前言</h2><p>好久没玩刷机了，刚好最近捡了个旧手机玩一玩，想起当年刷机的经历还是蛮有意思的，没想到这么多年过去了还是没变，第三方Rec 还是用的 <code>TWRP</code>， root 方案还是用的 <code>Magisk</code>等等。本次刷机采用的是 <em><strong>小米 CC9Pro</strong></em>，虽然机型比较旧，但由于是小米，刷机门槛不高。</p><p>不过在刷机前，还是要有几点注意事项要说明:</p><ul><li>请在备用机上进行刷机</li><li>若有重要资料请提前备份，刷机过程将进行双清（清除 Data 和 Cache分区）</li><li>刷机后，尽管不获取 root 权限，手机也无法获取完整的来自于 OEM的保护</li><li>手机的保修将失效</li></ul><p>接下来是准备工作：</p><p>硬件需求：</p><ul><li>一台电脑</li><li>需要刷机的手机</li><li>数据线</li></ul><p>软件需求：</p><ul><li><a href="https://web.vip.miui.com/page/info/mio/mio/unlock">MIUI官方解锁工具</a></li><li><ahref="https://developer.android.com/tools/releases/platform-tools">ADB调试工具</a></li><li><a href="https://twrp.me/Devices/">TWRP Recovery</a></li><li><ahref="https://www.bilibili.com/read/cv17362377">自选刷机包</a></li></ul><p>如果你是刷机老玩家，可能一部手机足矣，但为了照顾小白，保证整体过程顺利，故选择最稳妥的刷机方案。</p><p>接下来开始正式的刷机过程。</p><h2 id="解锁-bootloader">解锁 BootLoader</h2><p>根据 <em><strong>小米社区</strong></em> 的规则，基于 MIUI的新机器在购买绑定账号后需要耐心等待为期 <em><strong>3 天</strong></em>的冷静期，确保用户不会拿到手机后就立刻放弃保修，当 3天过去后，就可以解锁啦。而对于基于 HyperOS的设备则需要去小米社区申请。</p><p>下载并解压该<em><strong>MIUI官方解锁工具</strong></em>后，启动文件夹内的<em><strong>miflash_unlock</strong></em>。此时会跳转小米账号登陆，登陆成功后请务必阅读免责声明后选择是否同意，同意后按照屏幕指引将手机进入到<em><strong>BootLoader</strong></em>页面，具体操作方法为手机关机状态下按电源键+音量减。这时可能由于某些原因解锁按钮还是灰色的，是由于驱动未安装所致，操作方法为点击右上角齿轮标志并选择驱动检测，按提示重新连接手机后，解锁按钮就正常显示了。</p><h2 id="刷第三方-recovery">刷第三方 Recovery</h2><p>当我们解锁手机后，手机需要较长的时间来重启。这时我们可以配置一下<em><strong>ADB调试工具</strong></em>：</p><figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line"><span class="comment"># \path\to\file 为你下载好的 ADB 调试工具的路径</span></span><br><span class="line">&gt; <span class="built_in">cd</span> \path\to\file\</span><br><span class="line"></span><br><span class="line"><span class="comment"># 检查是否安装成功</span></span><br><span class="line">&gt; adb <span class="literal">--version</span></span><br><span class="line">Android Debug Bridge version <span class="number">1.0</span>.<span class="number">41</span></span><br><span class="line">Version <span class="number">34.0</span>.<span class="number">5</span><span class="literal">-10900879</span></span><br><span class="line">Installed as C:\Users\<span class="number">15025</span>\AppData\Local\Android\Sdk\platform<span class="literal">-tools</span>\adb.exe</span><br><span class="line">Running on Windows <span class="number">10.0</span>.<span class="number">22631</span></span><br></pre></td></tr></table></figure><p>手机重启后，进入到手机设置，点击 <em><strong>MIUI 版本</strong></em>10次，进入开发者模式（不同系统请自行查询），向下翻动，将 <em><strong>USB调试</strong></em> 选项打开，同意连接后检查设备是否连接成功：</p><figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 845d51c 为我的设备 ID，每一个人都不一样</span></span><br><span class="line">&gt; adb devices</span><br><span class="line">List of devices attached</span><br><span class="line"><span class="number">845</span>d51c device</span><br></pre></td></tr></table></figure><p>接下来，按如下步骤刷写 Recovery：</p><ol type="1"><li>重启至BootLoader：<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">&gt; adb reboot bootloader</span><br></pre></td></tr></table></figure></li><li>在 <em><strong>TWRPRecovery</strong></em>下载对应型号的镜像文件，并按如下指令刷写：<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line"><span class="comment"># twrp.img 替换成下载好的镜像文件的位置，尽量用绝对路径，否则大概率 error</span></span><br><span class="line">&gt; fastboot flash recovery twrp.img</span><br><span class="line">Sending <span class="string">&#x27;recovery&#x27;</span> (<span class="number">131072</span> KB)                     OKAY [  <span class="number">3.062</span><span class="type">s</span>]</span><br><span class="line">Writing <span class="string">&#x27;recovery&#x27;</span>                                 OKAY [  <span class="number">0.665</span><span class="type">s</span>]</span><br><span class="line">Finished. Total time: <span class="number">3.745</span>s</span><br><span class="line"></span><br><span class="line"><span class="comment"># 重启系统</span></span><br><span class="line">&gt; fastboot reboot</span><br></pre></td></tr></table></figure>在重启系统后，许多设备都会在引导原系统时将 Recovery自动刷回默认，故请在第一次重启就长按 <em><strong>音量上 +电源键</strong></em>，首次进入TWRPRecovery会比较缓慢，大概5秒后松手防止触发长按电源键强制重启。</li></ol><p>当我们成功显示 TeamWin 的 Logo时，证明 TWRP Recovery安装成功，这时会发现页面为纯英文，选择右下角的 <em><strong>SelectLanguage</strong></em> 更改语言为<em><strong>Chinese(Simplified)</strong></em> （简体中文）并点击OK。</p><p>按照提示，我们滑动滑块允许修改。</p><h2 id="通过-sideload-刷写合适的-rom">通过 sideload 刷写合适的 ROM</h2><p>因为系统会默认加密内部存储器，故我们需要进行格式化：</p><ol type="1"><li>点击清除</li><li>格式化 Data 分区</li><li>输入 yes</li></ol><p>此时电脑的内部存储器将变为不可读写的状态（即便打开了MTP模式），所以我们需要通过ADB Sideload 将刷机包刷入手机。</p><p>这时我们就可以挑选心仪的系统了，参考 Bilibili文章<em><strong>自选刷机包</strong></em>，由于第三方刷机包多为开源社区卡发与维护，所以很有可能有作者<em><strong>停更</strong></em>的情况。同时需要注意的是<em><strong>手机的型号和代号</strong></em>，确保自己选择了正确的刷机包，否则手机将无法正常启动。</p><p>当选择完毕，我们就可以开始 Sideload 刷机了：</p><ol type="1"><li>手机 TWRP 选择 <em><strong>高级–&gt;ADBSideload</strong></em>，并勾选所有选项，滑动下方滑块</li><li>通过 ADB 进行刷机<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 检查设备状态，注意设备 ID 后变成了 sideload</span></span><br><span class="line">&gt; adb devices</span><br><span class="line">List of devices attached</span><br><span class="line"><span class="number">845</span>d51c sideload</span><br><span class="line"></span><br><span class="line"><span class="comment"># 刷写系统, \path\to\file.zip 为下载好的刷机包的路径，并等待刷完</span></span><br><span class="line">&gt; adb sideload \path\to\file.zip</span><br></pre></td></tr></table></figure></li><li>手机 Recovery 返回主菜单，选择清除，选择格式化 Data 分区，同上</li><li>重启</li></ol><p>正常情况下，系统就成功刷成了你选择的系统，若中途出现问题，请确保刷机包和手机型号一一对应，确保刷机途中数据线正常工作。接下来重启并享受你的新系统吧。</p><h2 id="通过-内部存储-刷写合适的-rom">通过 内部存储 刷写合适的 ROM</h2><p>部分手机不会加密存储器（很少），且第三方 ROM很多也不会加密存储器，故我们就可以通过内部存储的方式直接刷机，方法如下：</p><ol type="1"><li>通过 <em><strong>MTP</strong></em>将刷机包传入手机或直接通过<em><strong>手机下载刷机包</strong></em>，并进入TWRP Recovery</li><li>点击安装并选择刷机包</li><li>滑动滑块开始刷机</li><li>按照上述方法清除 <em><strong>Data 和 Cache</strong></em>分区</li></ol><h2 id="troubleshooting">TroubleShooting</h2><ol type="1"><li>请一定不要忘记双清（清除 Data 和 Cache 分区）！</li><li>TWRP 中还有很多好用的工具，并且集成常用的 Linux指令，切勿乱点造成不可逆的影响</li><li>若刷机造成系统不可进可通过fastboot重刷recovery再重刷原版系统（你的手机系统的官网）的方式恢复为默认系统，请不必惊慌</li><li>一定记得将重要数据备份，不要在主力机上尝试，否则可能一天都用不了手机</li></ol><h2 id="结语">结语</h2><p>当学会了刷系统后，那么刷面具，刷xp框架，刷GApps也都是同样的道理了，感兴趣的话可以自行前往<ahref="https://www.coolapk.com/">酷安</a>翻贴学习更高级的玩法。但请记得，这时候的这部手机就不要放任何重要数据了，会有被窃风险。</p>]]></content>
      
      
      <categories>
          
          <category> 瞎玩折腾 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 刷机 </tag>
            
            <tag> 安卓 </tag>
            
            <tag> ROM </tag>
            
            <tag> MIUI </tag>
            
            <tag> TWRP </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>MoneyThings -- 全面的理财神器</title>
      <link href="/2024/01/31/MoneyThings/"/>
      <url>/2024/01/31/MoneyThings/</url>
      
        <content type="html"><![CDATA[<h2 id="前言">前言</h2><p>随着理财需求越来越大，急需一款记账软件来辅助我的每日生活，拯救我杂乱的财产管理。但是在Apple Store搜索后，参差不齐的软件映入眼帘，不是收费高，限制了很多基础功能，就是功能简陋，界面复古，很久没有维护。</p><p>但是，一个独树一帜的软件映入眼帘，不仅支持 Apple大多数设备，兼容快捷指令和小组件，而且还有非常现代化的 UI,甚至大部分核心功能完全免费。那就是我们今天将要介绍的主角：<ahref="https://apps.apple.com/us/app/moneythings-finance-tracker/id1549694221">MoneyThings</a>。</p><img src="https://kclub-phost-1313107835.cos.ap-nanjing.myqcloud.com/Phost/_posts/moneythings_logo.webp" alt="MoneyThings Logo" width="300" height="300"><p>这款软件的 logo 左上角为美元 <em><strong>$</strong></em>的符号，下方的条纹代表着记账内容，很容易就看得出是一款记账软件。而当我们打开软件时，其UI 风格和所有的元素都让我的直觉相信，这不是一款 Web核心的套皮软件，这是一款非常纯正的 <em><strong>Swift</strong></em> 配合<em><strong>Swift UI</strong></em> 开发的软件，可以说 Apple血统很足了。</p><img src="https://kclub-phost-1313107835.cos.ap-nanjing.myqcloud.com/Phost/_posts/moneythings_homepage.webp" alt="MoneyThings 主页"><p>接下来，就让我们按照标签栏逐一介绍这款软件的工能。</p><h2 id="交易">交易</h2><p>当我们打开这款软件，你的交易就会按照各种类别被分类。比如，软件的最上方是“全部” ，下方为 “交易类型” 的分类，分类中包含 “支出”、“收入” 和 “转移”三个细类，像这样的分类不仅存在于交易当中，在这款软件中随处可见，而且支持智能列表，可以按照你自己的意愿对所有交易分类。在主页的右上角可以进行“排序” 和调整 “显示选项”，而在主页的右下角，分别是 “搜索”、“One Touch”和 “添加”。搜索和添加自不必说，就是对我们的交易进行搜索或添加操作，但是这个<em><strong>One Touch</strong></em> 是什么呢？</p><img src="https://kclub-phost-1313107835.cos.ap-nanjing.myqcloud.com/Phost/_posts/moneythings_trade.webp" alt="MoneyThings 交易" width="500" height="700"><h3 id="one-touch">One Touch</h3><p><em><strong>One Touch</strong></em>是这款软件的一大亮点，其作用是可以快速的将某种常用操作执行。比如说我每天都会固定“将 500元 从 支付宝 添加至某张银行卡”，那么我们就可以设置一个转移操作，设置转出账户为支付宝，转入账户为某张银行卡，金额与货币为CNY 500，并添加相应的 分类、备注、标签、成员和名称等自定义信息，之后我们就可以在 One Touch 存在的地方快速添加。</p><div class="video"><video controls preload><source src='https://kclub-phost-1313107835.cos.ap-nanjing.myqcloud.com/Phost/_posts/moneythings_onetouch.mov' type='video/mp4'>Your browser does not support the video tag.</video></div><p>到这里还只是基本操作，你猜 One Touch都会出现在哪里？这就是这款软件的亮点了，我们可以把 One Touch 添加到<em><strong>App 图标(长按图标显示)、One Touch 屏幕小组件、One Touch首页面板、Apple Watch</strong></em>，甚至还有 <em><strong>快捷指令 和自动化</strong></em>！我们可以让 One Touch 出现在<em><strong>任何我们想出现的地方</strong></em>。</p><h3 id="交易编辑器">交易编辑器</h3><p>接下来我们注意点放在 One Touch下方的加号上，这就是添加交易，官方的叫法是<em><strong>交易编辑器</strong></em>，我们还是按照老样子从上往下看，最上方是“支出”、“收入”和“转移”，其次是“关联账户”、“日期与时间”、“场景”、“分类”、“标签”、“备注”、“图片”、“成员”和“附加选项”。大部分的软件都差不多，但是当我们随便点击一个输入框，就来到了这个软件的第二大亮点：<em><strong>客制化键盘</strong></em>。</p><img src="https://kclub-phost-1313107835.cos.ap-nanjing.myqcloud.com/Phost/_posts/moneythings_trade_editor.webp" alt="MoneyThings 交易编辑器" width="500" height="700"><h3 id="客制化键盘">客制化键盘</h3><p>当我们点击大多数该软件的输入框时，都会弹出该键盘，该键盘也是基于iOS原生键盘开发的，所以非常流畅。与系统键盘不同的是，当我们输入金额时，弹出的键盘两边会有<em><strong>分类、账户、标签、One Touch和下一项</strong></em>让我们快速高效的添加相关信息，而当我们点击关联账户和分类输入框时，键盘的数字取而代之的是你的<em><strong>各个账户</strong></em> 和<em><strong>所有分类</strong></em>，告别繁琐的输入一键添加。</p><div class="video"><video controls preload><source src='https://kclub-phost-1313107835.cos.ap-nanjing.myqcloud.com/Phost/_posts/moneythings_keyboard.mov' type='video/mp4'>Your browser does not support the video tag.</video></div><h3 id="交易详情页">交易详情页</h3><p>在这一部分的最后，我们来谈一下<em><strong>交易详情页</strong></em>。这个页面右上角会有<em><strong>筛选条件</strong></em>，上方会显示我们的<em><strong>总收入</strong></em>、<em><strong>总支出</strong></em>、<em><strong>收支差额</strong></em>和<em><strong>交易次数</strong></em>，下方则是按日期排列的<em><strong>交易流水</strong></em>。我们首先来看一下筛选条件，不仅可以使用<em><strong>选择、导出、排序、群组、分组、计算方式和统计范围</strong></em>等基本排序方式，甚至还支持 <em><strong>日历</strong></em> 和<em><strong>样式编辑器</strong></em>，可以说自定义性完全拉满。</p><img src="https://kclub-phost-1313107835.cos.ap-nanjing.myqcloud.com/Phost/_posts/moneythings_info.webp" alt="MoneyThings 分组"><p>当我们点击进入任何一笔交易时，则可以看到该交易的<em><strong>交易额分布</strong></em> 和<em><strong>按日期的分类收入趋势</strong></em>， 并支持<em><strong>过滤离群交易</strong></em>。往下翻，则是可以对该笔交易进行***编辑、退回和分期付款***。最后，则是这笔交易的详细信息。当我们想看我们最近的消费情况，看看某一天有没有过度消费时，我们拿出图标一看，瞬间就可以定位到具体的时间和金额。</p><img src="https://kclub-phost-1313107835.cos.ap-nanjing.myqcloud.com/Phost/_posts/moneythings_trade_info.webp" alt="MoneyThings 交易信息"><h2 id="分析">分析</h2><p>分析，对于一款理财软件来说是必须的，无论是小而美还是 Alipay也都有最基本的消费分析。而这款软件将消费分析分为了三种类型不同的类型，分别是支出活动、交易探索和生活配方。当我们通过最上方选定具体的日期后，类似于<em><strong>GitHub 热力图</strong></em>的表格就会显示哪一天支出的较多或较少，当然也可以更改为资金流入流出的计算方式。当我们选定具体日期后也可以看到那一天的具体情况。继续往下看，就是交易探索部分，可以看到支出或者消费曲线，并支持按天、月或年进行分组。最后就是生活配方了，会将我们的消费情况按照具体情况绘制成“饼图”，并在下方显示每一种类别的支出货收入情况。</p><img src="https://kclub-phost-1313107835.cos.ap-nanjing.myqcloud.com/Phost/_posts/moneything_analytics.webp" alt="MoneyThings 分析"><h2 id="资产">资产</h2><p>在资产部分，我们首先看到的就是折线图绘制的资产总和，在这款软件中被称为<em><strong>身价趋势</strong></em>，该部分会显示我们的所有资产情况，包括收益和需归还项目。往下看就是我们所有储蓄账户对应的金额，最后就是我们的可回收项目和需要归还的项目。</p><img src="https://kclub-phost-1313107835.cos.ap-nanjing.myqcloud.com/Phost/_posts/moneythings_worth.webp" alt="MoneyThings 身价趋势"><h2 id="设置">设置</h2><p>而在设置中，我们不仅可以自定义标签栏，隐藏掉自己不需要的功能，设置自己的区域，选择每周从周几开始，还可以更改自己的主要货币、绿涨红跌还是红涨绿跌、安全密钥、和图标库等等众多功能，可谓是DIY能力爆棚。而我想向你们介绍其中一个功能，那就是：导入交易。</p><h3 id="导入交易">导入交易</h3><p>这个功能对于刚下载这个软件后，手足无措的时候，当你点开，会发现不仅支持从微信 和 支付宝 导入，而且支持通过给定的 Excel 模版进行导入，导入数据会被记录在导入历史中方便查看。对于刚入门这款软件的人来说可谓是恰到好处。</p><img src="https://kclub-phost-1313107835.cos.ap-nanjing.myqcloud.com/Phost/_posts/moneythings_import.webp" alt="MoneyThings 导入交易"><h2 id="结语">结语</h2><p>当然，这款软件不仅有我所描述的这些功能，还支持一些比如 多人协作、AA制、家庭共享 和 分期付款等高级付费功能，如果有需要的话可以考虑支持作者。而更多我没有讲到的功能，你最好自己下载软件后体验一番，因为这款软件总能在你想不到的地方惊艳到你。如果非要说出缺点，那就只有一个UI 偶尔会出现点击后进不去页面的情况，只需要返回再点一下就可以解决。无论如何，一款优秀的软件是无法用言语来充分描述的，唯有亲身体验，才能真正感受到作者在细节上的用心，这款理财软件就是在每一个细节都精心雕琢，展现出作者的工匠精神，成为市场上的一股清流。</p><p><code>软件主观评分： 4.9/5</code>。</p><img src="https://kclub-phost-1313107835.cos.ap-nanjing.myqcloud.com/Phost/_posts/moneythings_rating.webp" alt="Ratings">]]></content>
      
      
      <categories>
          
          <category> 软件推荐 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 理财 </tag>
            
            <tag> iOS </tag>
            
            <tag> macOS </tag>
            
            <tag> iPadOS </tag>
            
            <tag> watchOS </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>JavaScript 调用 JSON API 实战</title>
      <link href="/2024/01/31/js-with-json-api/"/>
      <url>/2024/01/31/js-with-json-api/</url>
      
        <content type="html"><![CDATA[<h2 id="前言">前言</h2><p>最近很久都没有练习自己写 JS脚本的能力了，刚好在我的博客中需要读取用户的IP等信息，本想着网上直接拿一个API 调用就好，但是很多 API不是数据收集参数不够多，就是只允许企业和付费用户调用，好不容意找到个很好的API, 但是其数据返回的全是英文。最后艰难选择了最后一个全是英文的API,自己写脚本好了。当然考虑的还不止这些，包括异常处理，sessionStorage减少接口调用等等优化方法，逐步完善了这个脚本。</p><p>接下来我就分享一下写整个脚本的经过。</p><h2 id="代码实现">代码实现</h2><h3 id="获取-api">获取 API</h3><p>我选取的是 <a href="https://ipinfo.io">IPINFO</a> 的 API, 该 API需要注册，注册后在主页就可以拿到自己的token，如图所示：</p><div class="img-wrap"><div class="img-bg"><img class="img" src="https://kclub-phost-1313107835.cos.ap-nanjing.myqcloud.com/Phost/_posts/ipinfo.webp"/></div></div><div style="color:var(--anzhiyu-gray);font-size:14px">* 为防止 API 被第三方滥用，请在 IP Info 相关设置中开启白名单。</div><p>该网站的免费用户每月可以获得 50,000次免费的请求量，对于我这种小博客来说是足够了，需要更大的请求量也可以升级套餐，但是价格过高($99/month )</p><h3 id="调用-api">调用 API</h3><ol type="1"><li><p>首先我们初始化 API 地址：</p> <figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">// your_token 的位置填入自己的 token</span></span><br><span class="line"><span class="keyword">var</span> apiUrl = <span class="string">&#x27;https://ipinfo.io/json?token=your_token&#x27;</span>;</span><br></pre></td></tr></table></figure></li><li><p>当我们接受 API 返回的 JSON 数据时用 <code>fetch()</code>函数接收，正常情况下我们就可以直接使用数据了，但是若遇到特殊情况，比如说API 调用失败，我们需要抛出异常并进行异常处理。</p><p>代码实现：</p> <figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="title function_">fetch</span>(apiUrl)</span><br><span class="line">    .<span class="title function_">then</span>(<span class="function"><span class="params">response</span>=&gt;</span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(!response.<span class="property">ok</span>)&#123;</span><br><span class="line">            <span class="comment">// 抛出异常</span></span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">Error</span>(<span class="string">&#x27;Can\&#x27;t Fetch API Url.&#x27;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> response.<span class="title function_">json</span>();</span><br><span class="line">    &#125;)</span><br><span class="line">    .<span class="title function_">then</span>(<span class="function"><span class="params">data</span>=&gt;</span>&#123;</span><br><span class="line">        <span class="comment">// 这里是使用数据</span></span><br><span class="line">        <span class="title function_">writeTable</span>(data);</span><br><span class="line">    &#125;)</span><br><span class="line">    .<span class="title function_">catch</span>(<span class="function"><span class="params">error</span> =&gt;</span> &#123;</span><br><span class="line">        <span class="comment">// 如果出现异常，我们将返回 null 以告知函数没有读取到数据</span></span><br><span class="line">        <span class="title function_">writeTable</span>(<span class="literal">null</span>);</span><br><span class="line">        <span class="comment">// 并在终端返回错误信息</span></span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">error</span>(<span class="string">&#x27;There was a problem with your fetch operation:&#x27;</span>, error);</span><br><span class="line">    &#125;);</span><br></pre></td></tr></table></figure></li><li><p>这样的代码看似很完美，但是我们简单测试一下就暴露了一个问题，每当我们访问一次这个页面时，该方法就被调用了一次，API的使用次数就会减一，这让我们本不富裕的请求量更雪上加霜，那我们有什么方法可以优化一下呢？</p><p>优化方法大致分为两种：</p><ul><li>后端存储数据</li><li>前端 sessionStorage 或 localStorage</li></ul><p>由于我们是纯静态页面，故选择用第二种方法，那到底是用 sessionStorage还是 localStorage?</p><p>sessionStorage 的特点是当我们的数据存入 sessionStorage后，会缓存在当前标签页中，当标签页被关闭时，数据随机销毁。 localStorage的特点是数据会永久存储在浏览器的 cache中，即使关闭标签页和窗口，数据也不会丢失。</p><p>那么根据我们获取用户 IP 的这个需求来看，IP 的时效性很强，换一个 Wi-Fi就会出现变化，所以我们应该选取 sessionStorage 临时存储信息。</p><p>代码实现：</p> <figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 从 sessionStorage 读取数据</span></span><br><span class="line"><span class="keyword">const</span> storedFormData = <span class="variable language_">sessionStorage</span>.<span class="title function_">getItem</span>(<span class="string">&#x27;fromData&#x27;</span>);</span><br><span class="line"><span class="comment">// 如果 sessionStorage 存在数据则优先使用 sessionStorage 的数据</span></span><br><span class="line"><span class="keyword">if</span> (storedFormData) &#123;</span><br><span class="line">    <span class="keyword">const</span> formData = <span class="title class_">JSON</span>.<span class="title function_">parse</span>(storedFormData);</span><br><span class="line">    <span class="title function_">writeTable</span>(formData);</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="title function_">fetch</span>(apiUrl)</span><br><span class="line">        .<span class="title function_">then</span>(<span class="function"><span class="params">response</span>=&gt;</span>&#123;</span><br><span class="line">            <span class="keyword">if</span>(!response.<span class="property">ok</span>)&#123;</span><br><span class="line">                <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">Error</span>(<span class="string">&#x27;Can\&#x27;t Fetch API Url.&#x27;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">return</span> response.<span class="title function_">json</span>();</span><br><span class="line">        &#125;)</span><br><span class="line">        .<span class="title function_">then</span>(<span class="function"><span class="params">data</span>=&gt;</span>&#123;</span><br><span class="line">            <span class="title function_">writeTable</span>(data);</span><br><span class="line">            <span class="comment">// 当成功读取数据时，将数据存入 sessionStorage</span></span><br><span class="line">            <span class="variable language_">sessionStorage</span>.<span class="title function_">setItem</span>(<span class="string">&#x27;fromData&#x27;</span>, <span class="title class_">JSON</span>.<span class="title function_">stringify</span>(data));</span><br><span class="line">        &#125;)</span><br><span class="line">        .<span class="title function_">catch</span>(<span class="function"><span class="params">error</span> =&gt;</span> &#123;</span><br><span class="line">            <span class="title function_">writeTable</span>(<span class="literal">null</span>);</span><br><span class="line">            <span class="variable language_">console</span>.<span class="title function_">error</span>(<span class="string">&#x27;There was a problem with your fetch operation:&#x27;</span>, error);</span><br><span class="line">        &#125;);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>我们离完美的代码又近了一步，但是有些朋友可能就会问：我用的PJAX，无加载的情况下每个页面都会执行这个函数，但是又因为部分变量在别的页面根本不存在就会报错怎么办？</p><p>事实上，JS BOM 中有个非常好用的方法<code>window.location.pathname</code>,该方法会返回当前页面的路径，那么我们只需要判断一下该页面是否为需要执行该JS 脚本的页面就好了。</p><p>代码实现：</p> <figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 封装成一个函数</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">loadTableData</span>(<span class="params"></span>)&#123;</span><br><span class="line">    <span class="comment">// 读取当前页路径</span></span><br><span class="line">    <span class="keyword">const</span> currentPagePath = <span class="variable language_">window</span>.<span class="property">location</span>.<span class="property">pathname</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 判断是否为当前页，是则执行</span></span><br><span class="line">    <span class="keyword">if</span> (currentPagePath === <span class="string">&#x27;/privacy/&#x27;</span>) &#123;</span><br><span class="line">        <span class="keyword">const</span> storedFormData = <span class="variable language_">sessionStorage</span>.<span class="title function_">getItem</span>(<span class="string">&#x27;fromData&#x27;</span>);</span><br><span class="line">        <span class="keyword">if</span> (storedFormData) &#123;</span><br><span class="line">            <span class="keyword">const</span> formData = <span class="title class_">JSON</span>.<span class="title function_">parse</span>(storedFormData);</span><br><span class="line">            <span class="title function_">writeTable</span>(formData);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="title function_">fetch</span>(apiUrl)</span><br><span class="line">                .<span class="title function_">then</span>(<span class="function"><span class="params">response</span>=&gt;</span>&#123;</span><br><span class="line">                    <span class="keyword">if</span>(!response.<span class="property">ok</span>)&#123;</span><br><span class="line">                        <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">Error</span>(<span class="string">&#x27;Can\&#x27;t Fetch API Url.&#x27;</span>);</span><br><span class="line">                    &#125;</span><br><span class="line">                    <span class="keyword">return</span> response.<span class="title function_">json</span>();</span><br><span class="line">                &#125;)</span><br><span class="line">                .<span class="title function_">then</span>(<span class="function"><span class="params">data</span>=&gt;</span>&#123;</span><br><span class="line">                    <span class="title function_">writeTable</span>(data);</span><br><span class="line">                    <span class="variable language_">sessionStorage</span>.<span class="title function_">setItem</span>(<span class="string">&#x27;fromData&#x27;</span>, <span class="title class_">JSON</span>.<span class="title function_">stringify</span>(data));</span><br><span class="line">                &#125;)</span><br><span class="line">                .<span class="title function_">catch</span>(<span class="function"><span class="params">error</span> =&gt;</span> &#123;</span><br><span class="line">                    <span class="title function_">writeTable</span>(<span class="literal">null</span>);</span><br><span class="line">                    <span class="variable language_">console</span>.<span class="title function_">error</span>(<span class="string">&#x27;There was a problem with your fetch operation:&#x27;</span>, error);</span><br><span class="line">                &#125;);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure></li><li><p>近乎完美！我们只要进行最后一步，在网页加载成功后执行该脚本就成功了！</p> <figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 在刷新后执行</span></span><br><span class="line">$(()=&gt;&#123;<span class="title function_">loadTableData</span>()&#125;);</span><br><span class="line"><span class="comment">// 在 pjax 执行完成后执行，防止换页后数据丢失</span></span><br><span class="line">$(<span class="variable language_">document</span>).<span class="title function_">on</span>(<span class="string">&#x27;pjax:complete&#x27;</span>, <span class="function">()=&gt;</span>&#123;<span class="title function_">loadTableData</span>()&#125;);</span><br></pre></td></tr></table></figure></li></ol><h3 id="写入数据">写入数据</h3><p>在我们拿到数据后，要进行数据利用，如上文所示，我们调用了<code>writeTable()</code> 方法使用了数据，现在我们就要对<code>writeTable()</code> 进行实现。</p><ol type="1"><li><p>首先我们简单的写入下数据，JSON的结构直接对应代码结构，比如我们初始化一组数据：</p> <figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> jsonData = &#123;</span><br><span class="line">  <span class="string">&quot;ip&quot;</span>: <span class="string">&quot;14.198.50.29&quot;</span>,</span><br><span class="line">  <span class="string">&quot;data&quot;</span>: &#123;</span><br><span class="line">    <span class="string">&quot;hostname&quot;</span>: <span class="string">&quot;014198050029.ctinets.com&quot;</span>,</span><br><span class="line">  &#125; </span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><p>那么取出 <code>hostname</code> 的方法为:</p> <figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(jsonData.<span class="property">data</span>.<span class="property">hostname</span>);</span><br></pre></td></tr></table></figure><p>接下来我们简单实现下 API 的读取：</p> <figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">writeTable</span>(<span class="params">data</span>)&#123;</span><br><span class="line">    $(<span class="string">&#x27;#userAgentCountry&#x27;</span>).<span class="title function_">html</span>(data.<span class="property">country</span>);</span><br><span class="line">    $(<span class="string">&#x27;#userAgentIp&#x27;</span>).<span class="title function_">html</span>(data.<span class="property">ip</span>);</span><br><span class="line">    $(<span class="string">&#x27;#userAgentRegion&#x27;</span>).<span class="title function_">html</span>(data.<span class="property">region</span>);</span><br><span class="line">    $(<span class="string">&#x27;#userAgentCity&#x27;</span>).<span class="title function_">html</span>(data.<span class="property">city</span>);</span><br><span class="line">    $(<span class="string">&#x27;#userAgentIsp&#x27;</span>).<span class="title function_">html</span>(data.<span class="property">org</span>);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 我们直接用内置的方法获取到用户的 UA 信息</span></span><br><span class="line">    $(<span class="string">&#x27;#userAgentDevice&#x27;</span>).<span class="title function_">html</span>(navigator.<span class="property">userAgent</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>我们把抛出异常时的情况进行处理</p> <figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">writeTable</span>(<span class="params">data</span>)&#123;</span><br><span class="line">    <span class="keyword">if</span> (data === <span class="literal">null</span>)&#123;</span><br><span class="line">        $(<span class="string">&#x27;#userAgentCountry&#x27;</span>).<span class="title function_">html</span>(<span class="string">&#x27;无法获取信息&#x27;</span>);</span><br><span class="line">        $(<span class="string">&#x27;#userAgentIp&#x27;</span>).<span class="title function_">html</span>(<span class="string">&#x27;无法获取信息&#x27;</span>);</span><br><span class="line">        $(<span class="string">&#x27;#userAgentRegion&#x27;</span>).<span class="title function_">html</span>(<span class="string">&#x27;无法获取信息&#x27;</span>);</span><br><span class="line">        $(<span class="string">&#x27;#userAgentCity&#x27;</span>).<span class="title function_">html</span>(<span class="string">&#x27;无法获取信息&#x27;</span>);</span><br><span class="line">        $(<span class="string">&#x27;#userAgentIsp&#x27;</span>).<span class="title function_">html</span>(<span class="string">&#x27;无法获取信息&#x27;</span>);</span><br><span class="line">        $(<span class="string">&#x27;#userAgentDevice&#x27;</span>).<span class="title function_">html</span>(navigator.<span class="property">userAgent</span>);</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        $(<span class="string">&#x27;#userAgentCountry&#x27;</span>).<span class="title function_">html</span>(data.<span class="property">country</span>);</span><br><span class="line">        $(<span class="string">&#x27;#userAgentIp&#x27;</span>).<span class="title function_">html</span>(data.<span class="property">ip</span>);</span><br><span class="line">        $(<span class="string">&#x27;#userAgentRegion&#x27;</span>).<span class="title function_">html</span>(data.<span class="property">region</span>);</span><br><span class="line">        $(<span class="string">&#x27;#userAgentCity&#x27;</span>).<span class="title function_">html</span>(data.<span class="property">city</span>);</span><br><span class="line">        $(<span class="string">&#x27;#userAgentIsp&#x27;</span>).<span class="title function_">html</span>(data.<span class="property">org</span>);</span><br><span class="line">        $(<span class="string">&#x27;#userAgentDevice&#x27;</span>).<span class="title function_">html</span>(navigator.<span class="property">userAgent</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>但是我们执行了如此多的 DOM选择器，为了节省内存，我们初始化他们并直接调用初始化好的选择器</p> <figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">writeTable</span>(<span class="params">data</span>)&#123;</span><br><span class="line">    <span class="keyword">var</span> $userAgentIp = $(<span class="string">&#x27;#userAgentIp&#x27;</span>),</span><br><span class="line">        $userAgentCountry = $(<span class="string">&#x27;#userAgentCountry&#x27;</span>),</span><br><span class="line">        $userAgentRegion = $(<span class="string">&#x27;#userAgentRegion&#x27;</span>),</span><br><span class="line">        $userAgentCity = $(<span class="string">&#x27;#userAgentCity&#x27;</span>),</span><br><span class="line">        $userAgentIsp = $(<span class="string">&#x27;#userAgentIsp&#x27;</span>),</span><br><span class="line">        $userAgentDevice = $(<span class="string">&#x27;#userAgentDevice&#x27;</span>);</span><br><span class="line">    <span class="keyword">if</span> (data === <span class="literal">null</span>)&#123;</span><br><span class="line">        $userAgentIp.<span class="title function_">html</span>(<span class="string">&#x27;无法获取信息&#x27;</span>);</span><br><span class="line">        $userAgentCountry.<span class="title function_">html</span>(<span class="string">&#x27;无法获取信息&#x27;</span>);</span><br><span class="line">        $userAgentRegion.<span class="title function_">html</span>(<span class="string">&#x27;无法获取信息&#x27;</span>);</span><br><span class="line">        $userAgentCity.<span class="title function_">html</span>(<span class="string">&#x27;无法获取信息&#x27;</span>);</span><br><span class="line">        $userAgentIsp.<span class="title function_">html</span>(<span class="string">&#x27;无法获取信息&#x27;</span>);</span><br><span class="line">        $userAgentDevice.<span class="title function_">html</span>(navigator.<span class="property">userAgent</span>);</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        $userAgentIp.<span class="title function_">html</span>(data.<span class="property">ip</span>);</span><br><span class="line">        $userAgentCountry.<span class="title function_">html</span>(data.<span class="property">country</span>);</span><br><span class="line">        $userAgentRegion.<span class="title function_">html</span>(data.<span class="property">region</span>);</span><br><span class="line">        $userAgentCity.<span class="title function_">html</span>(data.<span class="property">city</span>);</span><br><span class="line">        $userAgentIsp.<span class="title function_">html</span>(data.<span class="property">org</span>);</span><br><span class="line">        $userAgentDevice.<span class="title function_">html</span>(navigator.<span class="property">userAgent</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ol><h3 id="格式化-iso-国家代码">格式化 ISO 国家代码</h3><p>因为默认的国家代码为二位英文码，故我们需要将其转换成中文。</p><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">countryCodeToName</span>(<span class="params">countryCode</span>) &#123;</span><br><span class="line">   </span><br><span class="line">   <span class="comment">// ISO 国家代码和国家名称的映射</span></span><br><span class="line">    <span class="keyword">var</span> countryNames = &#123;</span><br><span class="line">        <span class="string">&quot;AF&quot;</span>: <span class="string">&quot;阿富汗&quot;</span>,</span><br><span class="line">        <span class="string">&quot;AX&quot;</span>: <span class="string">&quot;奥兰群岛&quot;</span>,</span><br><span class="line">        <span class="string">&quot;AL&quot;</span>: <span class="string">&quot;阿尔巴尼亚&quot;</span>,</span><br><span class="line">        <span class="comment">//...</span></span><br><span class="line">        <span class="string">&quot;ZW&quot;</span>: <span class="string">&quot;津巴布韦&quot;</span></span><br><span class="line">    &#125;;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 返回对应国家代码的国家名称，如果不存在则返回国家代码</span></span><br><span class="line">    <span class="keyword">return</span> countryNames[countryCode] || countryCode;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>然后在 <code>writeTable()</code> 方法中调用就可以啦</p><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">writeTable</span>(<span class="params">data</span>)&#123;</span><br><span class="line">    <span class="keyword">var</span> $userAgentIp = $(<span class="string">&#x27;#userAgentIp&#x27;</span>),</span><br><span class="line">        $userAgentCountry = $(<span class="string">&#x27;#userAgentCountry&#x27;</span>),</span><br><span class="line">        $userAgentRegion = $(<span class="string">&#x27;#userAgentRegion&#x27;</span>),</span><br><span class="line">        $userAgentCity = $(<span class="string">&#x27;#userAgentCity&#x27;</span>),</span><br><span class="line">        $userAgentIsp = $(<span class="string">&#x27;#userAgentIsp&#x27;</span>),</span><br><span class="line">        $userAgentDevice = $(<span class="string">&#x27;#userAgentDevice&#x27;</span>);</span><br><span class="line">    <span class="keyword">if</span> (data === <span class="literal">null</span>)&#123;</span><br><span class="line">        $userAgentIp.<span class="title function_">html</span>(<span class="string">&#x27;无法获取信息&#x27;</span>);</span><br><span class="line">        $userAgentCountry.<span class="title function_">html</span>(<span class="string">&#x27;无法获取信息&#x27;</span>);</span><br><span class="line">        $userAgentRegion.<span class="title function_">html</span>(<span class="string">&#x27;无法获取信息&#x27;</span>);</span><br><span class="line">        $userAgentCity.<span class="title function_">html</span>(<span class="string">&#x27;无法获取信息&#x27;</span>);</span><br><span class="line">        $userAgentIsp.<span class="title function_">html</span>(<span class="string">&#x27;无法获取信息&#x27;</span>);</span><br><span class="line">        $userAgentDevice.<span class="title function_">html</span>(navigator.<span class="property">userAgent</span>);</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        countryName = <span class="title function_">countryCodeToName</span>(data.<span class="property">country</span>);</span><br><span class="line">        $userAgentIp.<span class="title function_">html</span>(data.<span class="property">ip</span>);</span><br><span class="line">        $userAgentCountry.<span class="title function_">html</span>(countryName);</span><br><span class="line">        $userAgentRegion.<span class="title function_">html</span>(data.<span class="property">region</span>);</span><br><span class="line">        $userAgentCity.<span class="title function_">html</span>(data.<span class="property">city</span>);</span><br><span class="line">        $userAgentIsp.<span class="title function_">html</span>(data.<span class="property">org</span>);</span><br><span class="line">        $userAgentDevice.<span class="title function_">html</span>(navigator.<span class="property">userAgent</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="完整代码展示">完整代码展示</h3><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> apiUrl = <span class="string">&#x27;https://ipinfo.io/json?token=your_token&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">loadTableData</span>(<span class="params"></span>)&#123;</span><br><span class="line">    <span class="keyword">const</span> currentPagePath = <span class="variable language_">window</span>.<span class="property">location</span>.<span class="property">pathname</span>;</span><br><span class="line">    <span class="keyword">if</span> (currentPagePath === <span class="string">&#x27;/privacy/&#x27;</span>) &#123;</span><br><span class="line">        <span class="keyword">const</span> storedFormData = <span class="variable language_">sessionStorage</span>.<span class="title function_">getItem</span>(<span class="string">&#x27;tableData&#x27;</span>);</span><br><span class="line">        <span class="keyword">if</span> (storedFormData) &#123;</span><br><span class="line">            <span class="keyword">const</span> formData = <span class="title class_">JSON</span>.<span class="title function_">parse</span>(storedFormData);</span><br><span class="line">            <span class="title function_">writeTable</span>(formData);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="title function_">fetch</span>(apiUrl)</span><br><span class="line">                .<span class="title function_">then</span>(<span class="function"><span class="params">response</span>=&gt;</span>&#123;</span><br><span class="line">                    <span class="keyword">if</span>(!response.<span class="property">ok</span>)&#123;</span><br><span class="line">                        <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">Error</span>(<span class="string">&#x27;Can\&#x27;t Fetch API Url.&#x27;</span>);</span><br><span class="line">                    &#125;</span><br><span class="line">                    <span class="keyword">return</span> response.<span class="title function_">json</span>();</span><br><span class="line">                &#125;)</span><br><span class="line">                .<span class="title function_">then</span>(<span class="function"><span class="params">data</span>=&gt;</span>&#123;</span><br><span class="line">                    <span class="title function_">writeTable</span>(data);</span><br><span class="line">                    <span class="variable language_">sessionStorage</span>.<span class="title function_">setItem</span>(<span class="string">&#x27;tableData&#x27;</span>, <span class="title class_">JSON</span>.<span class="title function_">stringify</span>(data));</span><br><span class="line">                &#125;)</span><br><span class="line">                .<span class="title function_">catch</span>(<span class="function"><span class="params">error</span> =&gt;</span> &#123;</span><br><span class="line">                    <span class="title function_">writeTable</span>(<span class="literal">null</span>);</span><br><span class="line">                    <span class="variable language_">console</span>.<span class="title function_">error</span>(<span class="string">&#x27;There was a problem with your fetch operation:&#x27;</span>, error);</span><br><span class="line">                &#125;);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">$(()=&gt;&#123;<span class="title function_">loadTableData</span>()&#125;);</span><br><span class="line">$(<span class="variable language_">document</span>).<span class="title function_">on</span>(<span class="string">&#x27;pjax:complete&#x27;</span>, <span class="function">()=&gt;</span>&#123;<span class="title function_">loadTableData</span>()&#125;);</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">writeTable</span>(<span class="params">data</span>)&#123;</span><br><span class="line">    <span class="keyword">var</span> $userAgentIp = $(<span class="string">&#x27;#userAgentIp&#x27;</span>),</span><br><span class="line">        $userAgentCountry = $(<span class="string">&#x27;#userAgentCountry&#x27;</span>),</span><br><span class="line">        $userAgentRegion = $(<span class="string">&#x27;#userAgentRegion&#x27;</span>),</span><br><span class="line">        $userAgentCity = $(<span class="string">&#x27;#userAgentCity&#x27;</span>),</span><br><span class="line">        $userAgentIsp = $(<span class="string">&#x27;#userAgentIsp&#x27;</span>),</span><br><span class="line">        $userAgentDevice = $(<span class="string">&#x27;#userAgentDevice&#x27;</span>);</span><br><span class="line">    <span class="keyword">if</span> (data === <span class="literal">null</span>)&#123;</span><br><span class="line">        $userAgentIp.<span class="title function_">html</span>(<span class="string">&#x27;无法获取信息&#x27;</span>);</span><br><span class="line">        $userAgentCountry.<span class="title function_">html</span>(<span class="string">&#x27;无法获取信息&#x27;</span>);</span><br><span class="line">        $userAgentRegion.<span class="title function_">html</span>(<span class="string">&#x27;无法获取信息&#x27;</span>);</span><br><span class="line">        $userAgentCity.<span class="title function_">html</span>(<span class="string">&#x27;无法获取信息&#x27;</span>);</span><br><span class="line">        $userAgentIsp.<span class="title function_">html</span>(<span class="string">&#x27;无法获取信息&#x27;</span>);</span><br><span class="line">        $userAgentDevice.<span class="title function_">html</span>(navigator.<span class="property">userAgent</span>);</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        countryName = <span class="title function_">countryCodeToName</span>(data.<span class="property">country</span>);</span><br><span class="line">        $userAgentIp.<span class="title function_">html</span>(data.<span class="property">ip</span>);</span><br><span class="line">        $userAgentCountry.<span class="title function_">html</span>(countryName);</span><br><span class="line">        $userAgentRegion.<span class="title function_">html</span>(data.<span class="property">region</span>);</span><br><span class="line">        $userAgentCity.<span class="title function_">html</span>(data.<span class="property">city</span>);</span><br><span class="line">        $userAgentIsp.<span class="title function_">html</span>(data.<span class="property">org</span>);</span><br><span class="line">        $userAgentDevice.<span class="title function_">html</span>(navigator.<span class="property">userAgent</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">countryCodeToName</span>(<span class="params">countryCode</span>) &#123;</span><br><span class="line">   </span><br><span class="line">   <span class="comment">// ISO 国家代码和国家名称的映射</span></span><br><span class="line">    <span class="keyword">var</span> countryNames = &#123;</span><br><span class="line">        <span class="string">&quot;AF&quot;</span>: <span class="string">&quot;阿富汗&quot;</span>,</span><br><span class="line">        <span class="string">&quot;AX&quot;</span>: <span class="string">&quot;奥兰群岛&quot;</span>,</span><br><span class="line">        <span class="string">&quot;AL&quot;</span>: <span class="string">&quot;阿尔巴尼亚&quot;</span>,</span><br><span class="line">        <span class="comment">//...</span></span><br><span class="line">        <span class="string">&quot;ZW&quot;</span>: <span class="string">&quot;津巴布韦&quot;</span></span><br><span class="line">    &#125;;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 返回对应国家代码的国家名称，如果不存在则返回国家代码</span></span><br><span class="line">    <span class="keyword">return</span> countryNames[countryCode] || countryCode;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="附录iso-国家代码中文对照函数">附录：ISO国家代码中文对照函数</h3><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> countryNames = &#123;</span><br><span class="line">    <span class="string">&quot;AF&quot;</span>: <span class="string">&quot;阿富汗&quot;</span>,</span><br><span class="line">    <span class="string">&quot;AX&quot;</span>: <span class="string">&quot;奥兰群岛&quot;</span>,</span><br><span class="line">    <span class="string">&quot;AL&quot;</span>: <span class="string">&quot;阿尔巴尼亚&quot;</span>,</span><br><span class="line">    <span class="string">&quot;DZ&quot;</span>: <span class="string">&quot;阿尔及利亚&quot;</span>,</span><br><span class="line">    <span class="string">&quot;AS&quot;</span>: <span class="string">&quot;美属萨摩亚&quot;</span>,</span><br><span class="line">    <span class="string">&quot;AD&quot;</span>: <span class="string">&quot;安道尔&quot;</span>,</span><br><span class="line">    <span class="string">&quot;AO&quot;</span>: <span class="string">&quot;安哥拉&quot;</span>,</span><br><span class="line">    <span class="string">&quot;AI&quot;</span>: <span class="string">&quot;安圭拉&quot;</span>,</span><br><span class="line">    <span class="string">&quot;AQ&quot;</span>: <span class="string">&quot;南极洲&quot;</span>,</span><br><span class="line">    <span class="string">&quot;AG&quot;</span>: <span class="string">&quot;安提瓜和巴布达&quot;</span>,</span><br><span class="line">    <span class="string">&quot;AR&quot;</span>: <span class="string">&quot;阿根廷&quot;</span>,</span><br><span class="line">    <span class="string">&quot;AM&quot;</span>: <span class="string">&quot;亚美尼亚&quot;</span>,</span><br><span class="line">    <span class="string">&quot;AW&quot;</span>: <span class="string">&quot;阿鲁巴&quot;</span>,</span><br><span class="line">    <span class="string">&quot;AU&quot;</span>: <span class="string">&quot;澳大利亚&quot;</span>,</span><br><span class="line">    <span class="string">&quot;AT&quot;</span>: <span class="string">&quot;奥地利&quot;</span>,</span><br><span class="line">    <span class="string">&quot;AZ&quot;</span>: <span class="string">&quot;阿塞拜疆&quot;</span>,</span><br><span class="line">    <span class="string">&quot;BS&quot;</span>: <span class="string">&quot;巴哈马&quot;</span>,</span><br><span class="line">    <span class="string">&quot;BH&quot;</span>: <span class="string">&quot;巴林&quot;</span>,</span><br><span class="line">    <span class="string">&quot;BD&quot;</span>: <span class="string">&quot;孟加拉国&quot;</span>,</span><br><span class="line">    <span class="string">&quot;BB&quot;</span>: <span class="string">&quot;巴巴多斯&quot;</span>,</span><br><span class="line">    <span class="string">&quot;BY&quot;</span>: <span class="string">&quot;白俄罗斯&quot;</span>,</span><br><span class="line">    <span class="string">&quot;BE&quot;</span>: <span class="string">&quot;比利时&quot;</span>,</span><br><span class="line">    <span class="string">&quot;BZ&quot;</span>: <span class="string">&quot;伯利兹&quot;</span>,</span><br><span class="line">    <span class="string">&quot;BJ&quot;</span>: <span class="string">&quot;贝宁&quot;</span>,</span><br><span class="line">    <span class="string">&quot;BM&quot;</span>: <span class="string">&quot;百慕大&quot;</span>,</span><br><span class="line">    <span class="string">&quot;BT&quot;</span>: <span class="string">&quot;不丹&quot;</span>,</span><br><span class="line">    <span class="string">&quot;BO&quot;</span>: <span class="string">&quot;玻利维亚&quot;</span>,</span><br><span class="line">    <span class="string">&quot;BA&quot;</span>: <span class="string">&quot;波斯尼亚和黑塞哥维那&quot;</span>,</span><br><span class="line">    <span class="string">&quot;BW&quot;</span>: <span class="string">&quot;博茨瓦纳&quot;</span>,</span><br><span class="line">    <span class="string">&quot;BV&quot;</span>: <span class="string">&quot;布维岛&quot;</span>,</span><br><span class="line">    <span class="string">&quot;BR&quot;</span>: <span class="string">&quot;巴西&quot;</span>,</span><br><span class="line">    <span class="string">&quot;IO&quot;</span>: <span class="string">&quot;英属印度洋领地&quot;</span>,</span><br><span class="line">    <span class="string">&quot;BN&quot;</span>: <span class="string">&quot;文莱&quot;</span>,</span><br><span class="line">    <span class="string">&quot;BG&quot;</span>: <span class="string">&quot;保加利亚&quot;</span>,</span><br><span class="line">    <span class="string">&quot;BF&quot;</span>: <span class="string">&quot;布基纳法索&quot;</span>,</span><br><span class="line">    <span class="string">&quot;BI&quot;</span>: <span class="string">&quot;布隆迪&quot;</span>,</span><br><span class="line">    <span class="string">&quot;KH&quot;</span>: <span class="string">&quot;柬埔寨&quot;</span>,</span><br><span class="line">    <span class="string">&quot;CM&quot;</span>: <span class="string">&quot;喀麦隆&quot;</span>,</span><br><span class="line">    <span class="string">&quot;CA&quot;</span>: <span class="string">&quot;加拿大&quot;</span>,</span><br><span class="line">    <span class="string">&quot;CV&quot;</span>: <span class="string">&quot;佛得角&quot;</span>,</span><br><span class="line">    <span class="string">&quot;KY&quot;</span>: <span class="string">&quot;开曼群岛&quot;</span>,</span><br><span class="line">    <span class="string">&quot;CF&quot;</span>: <span class="string">&quot;中非共和国&quot;</span>,</span><br><span class="line">    <span class="string">&quot;TD&quot;</span>: <span class="string">&quot;乍得&quot;</span>,</span><br><span class="line">    <span class="string">&quot;CL&quot;</span>: <span class="string">&quot;智利&quot;</span>,</span><br><span class="line">    <span class="string">&quot;CN&quot;</span>: <span class="string">&quot;中国&quot;</span>,</span><br><span class="line">    <span class="string">&quot;CX&quot;</span>: <span class="string">&quot;圣诞岛&quot;</span>,</span><br><span class="line">    <span class="string">&quot;CC&quot;</span>: <span class="string">&quot;科科斯（基林）群岛&quot;</span>,</span><br><span class="line">    <span class="string">&quot;CO&quot;</span>: <span class="string">&quot;哥伦比亚&quot;</span>,</span><br><span class="line">    <span class="string">&quot;KM&quot;</span>: <span class="string">&quot;科摩罗&quot;</span>,</span><br><span class="line">    <span class="string">&quot;CG&quot;</span>: <span class="string">&quot;刚果（布）&quot;</span>,</span><br><span class="line">    <span class="string">&quot;CD&quot;</span>: <span class="string">&quot;刚果（金）&quot;</span>,</span><br><span class="line">    <span class="string">&quot;CK&quot;</span>: <span class="string">&quot;库克群岛&quot;</span>,</span><br><span class="line">    <span class="string">&quot;CR&quot;</span>: <span class="string">&quot;哥斯达黎加&quot;</span>,</span><br><span class="line">    <span class="string">&quot;CI&quot;</span>: <span class="string">&quot;科特迪瓦&quot;</span>,</span><br><span class="line">    <span class="string">&quot;HR&quot;</span>: <span class="string">&quot;克罗地亚&quot;</span>,</span><br><span class="line">    <span class="string">&quot;CU&quot;</span>: <span class="string">&quot;古巴&quot;</span>,</span><br><span class="line">    <span class="string">&quot;CY&quot;</span>: <span class="string">&quot;塞浦路斯&quot;</span>,</span><br><span class="line">    <span class="string">&quot;CZ&quot;</span>: <span class="string">&quot;捷克共和国&quot;</span>,</span><br><span class="line">    <span class="string">&quot;DK&quot;</span>: <span class="string">&quot;丹麦&quot;</span>,</span><br><span class="line">    <span class="string">&quot;DJ&quot;</span>: <span class="string">&quot;吉布提&quot;</span>,</span><br><span class="line">    <span class="string">&quot;DM&quot;</span>: <span class="string">&quot;多米尼克&quot;</span>,</span><br><span class="line">    <span class="string">&quot;DO&quot;</span>: <span class="string">&quot;多米尼加共和国&quot;</span>,</span><br><span class="line">    <span class="string">&quot;EC&quot;</span>: <span class="string">&quot;厄瓜多尔&quot;</span>,</span><br><span class="line">    <span class="string">&quot;EG&quot;</span>: <span class="string">&quot;埃及&quot;</span>,</span><br><span class="line">    <span class="string">&quot;SV&quot;</span>: <span class="string">&quot;萨尔瓦多&quot;</span>,</span><br><span class="line">    <span class="string">&quot;GQ&quot;</span>: <span class="string">&quot;赤道几内亚&quot;</span>,</span><br><span class="line">    <span class="string">&quot;ER&quot;</span>: <span class="string">&quot;厄立特里亚&quot;</span>,</span><br><span class="line">    <span class="string">&quot;EE&quot;</span>: <span class="string">&quot;爱沙尼亚&quot;</span>,</span><br><span class="line">    <span class="string">&quot;ET&quot;</span>: <span class="string">&quot;埃塞俄比亚&quot;</span>,</span><br><span class="line">    <span class="string">&quot;FK&quot;</span>: <span class="string">&quot;福克兰群岛（马尔维纳斯）&quot;</span>,</span><br><span class="line">    <span class="string">&quot;FO&quot;</span>: <span class="string">&quot;法罗群岛&quot;</span>,</span><br><span class="line">    <span class="string">&quot;FJ&quot;</span>: <span class="string">&quot;斐济&quot;</span>,</span><br><span class="line">    <span class="string">&quot;FI&quot;</span>: <span class="string">&quot;芬兰&quot;</span>,</span><br><span class="line">    <span class="string">&quot;FR&quot;</span>: <span class="string">&quot;法国&quot;</span>,</span><br><span class="line">    <span class="string">&quot;GF&quot;</span>: <span class="string">&quot;法属圭亚那&quot;</span>,</span><br><span class="line">    <span class="string">&quot;PF&quot;</span>: <span class="string">&quot;法属波利尼西亚&quot;</span>,</span><br><span class="line">    <span class="string">&quot;TF&quot;</span>: <span class="string">&quot;法属南部领地&quot;</span>,</span><br><span class="line">    <span class="string">&quot;GA&quot;</span>: <span class="string">&quot;加蓬&quot;</span>,</span><br><span class="line">    <span class="string">&quot;GM&quot;</span>: <span class="string">&quot;冈比亚&quot;</span>,</span><br><span class="line">    <span class="string">&quot;GE&quot;</span>: <span class="string">&quot;格鲁吉亚&quot;</span>,</span><br><span class="line">    <span class="string">&quot;DE&quot;</span>: <span class="string">&quot;德国&quot;</span>,</span><br><span class="line">    <span class="string">&quot;GH&quot;</span>: <span class="string">&quot;加纳&quot;</span>,</span><br><span class="line">    <span class="string">&quot;GI&quot;</span>: <span class="string">&quot;直布罗陀&quot;</span>,</span><br><span class="line">    <span class="string">&quot;GR&quot;</span>: <span class="string">&quot;希腊&quot;</span>,</span><br><span class="line">    <span class="string">&quot;GL&quot;</span>: <span class="string">&quot;格陵兰&quot;</span>,</span><br><span class="line">    <span class="string">&quot;GD&quot;</span>: <span class="string">&quot;格林纳达&quot;</span>,</span><br><span class="line">    <span class="string">&quot;GP&quot;</span>: <span class="string">&quot;瓜德罗普&quot;</span>,</span><br><span class="line">    <span class="string">&quot;GU&quot;</span>: <span class="string">&quot;关岛&quot;</span>,</span><br><span class="line">    <span class="string">&quot;GT&quot;</span>: <span class="string">&quot;危地马拉&quot;</span>,</span><br><span class="line">    <span class="string">&quot;GG&quot;</span>: <span class="string">&quot;格恩西岛&quot;</span>,</span><br><span class="line">    <span class="string">&quot;GN&quot;</span>: <span class="string">&quot;几内亚&quot;</span>,</span><br><span class="line">    <span class="string">&quot;GW&quot;</span>: <span class="string">&quot;几内亚比绍&quot;</span>,</span><br><span class="line">    <span class="string">&quot;GY&quot;</span>: <span class="string">&quot;圭亚那&quot;</span>,</span><br><span class="line">    <span class="string">&quot;HT&quot;</span>: <span class="string">&quot;海地&quot;</span>,</span><br><span class="line">    <span class="string">&quot;HM&quot;</span>: <span class="string">&quot;赫德岛和麦克唐纳群岛&quot;</span>,</span><br><span class="line">    <span class="string">&quot;VA&quot;</span>: <span class="string">&quot;梵蒂冈&quot;</span>,</span><br><span class="line">    <span class="string">&quot;HN&quot;</span>: <span class="string">&quot;洪都拉斯&quot;</span>,</span><br><span class="line">    <span class="string">&quot;HK&quot;</span>: <span class="string">&quot;中国香港特别行政区&quot;</span>,</span><br><span class="line">    <span class="string">&quot;HU&quot;</span>: <span class="string">&quot;匈牙利&quot;</span>,</span><br><span class="line">    <span class="string">&quot;IS&quot;</span>: <span class="string">&quot;冰岛&quot;</span>,</span><br><span class="line">    <span class="string">&quot;IN&quot;</span>: <span class="string">&quot;印度&quot;</span>,</span><br><span class="line">    <span class="string">&quot;ID&quot;</span>: <span class="string">&quot;印度尼西亚&quot;</span>,</span><br><span class="line">    <span class="string">&quot;IR&quot;</span>: <span class="string">&quot;伊朗&quot;</span>,</span><br><span class="line">    <span class="string">&quot;IQ&quot;</span>: <span class="string">&quot;伊拉克&quot;</span>,</span><br><span class="line">    <span class="string">&quot;IE&quot;</span>: <span class="string">&quot;爱尔兰&quot;</span>,</span><br><span class="line">    <span class="string">&quot;IM&quot;</span>: <span class="string">&quot;马恩岛&quot;</span>,</span><br><span class="line">    <span class="string">&quot;IL&quot;</span>: <span class="string">&quot;以色列&quot;</span>,</span><br><span class="line">    <span class="string">&quot;IT&quot;</span>: <span class="string">&quot;意大利&quot;</span>,</span><br><span class="line">    <span class="string">&quot;JM&quot;</span>: <span class="string">&quot;牙买加&quot;</span>,</span><br><span class="line">    <span class="string">&quot;JP&quot;</span>: <span class="string">&quot;日本&quot;</span>,</span><br><span class="line">    <span class="string">&quot;JE&quot;</span>: <span class="string">&quot;泽西岛&quot;</span>,</span><br><span class="line">    <span class="string">&quot;JO&quot;</span>: <span class="string">&quot;约旦&quot;</span>,</span><br><span class="line">    <span class="string">&quot;KZ&quot;</span>: <span class="string">&quot;哈萨克斯坦&quot;</span>,</span><br><span class="line">    <span class="string">&quot;KE&quot;</span>: <span class="string">&quot;肯尼亚&quot;</span>,</span><br><span class="line">    <span class="string">&quot;KI&quot;</span>: <span class="string">&quot;基里巴斯&quot;</span>,</span><br><span class="line">    <span class="string">&quot;KP&quot;</span>: <span class="string">&quot;朝鲜&quot;</span>,</span><br><span class="line">    <span class="string">&quot;KR&quot;</span>: <span class="string">&quot;韩国&quot;</span>,</span><br><span class="line">    <span class="string">&quot;KW&quot;</span>: <span class="string">&quot;科威特&quot;</span>,</span><br><span class="line">    <span class="string">&quot;KG&quot;</span>: <span class="string">&quot;吉尔吉斯斯坦&quot;</span>,</span><br><span class="line">    <span class="string">&quot;LA&quot;</span>: <span class="string">&quot;老挝&quot;</span>,</span><br><span class="line">    <span class="string">&quot;LV&quot;</span>: <span class="string">&quot;拉脱维亚&quot;</span>,</span><br><span class="line">    <span class="string">&quot;LB&quot;</span>: <span class="string">&quot;黎巴嫩&quot;</span>,</span><br><span class="line">    <span class="string">&quot;LS&quot;</span>: <span class="string">&quot;莱索托&quot;</span>,</span><br><span class="line">    <span class="string">&quot;LR&quot;</span>: <span class="string">&quot;利比里亚&quot;</span>,</span><br><span class="line">    <span class="string">&quot;LY&quot;</span>: <span class="string">&quot;利比亚&quot;</span>,</span><br><span class="line">    <span class="string">&quot;LI&quot;</span>: <span class="string">&quot;列支敦士登&quot;</span>,</span><br><span class="line">    <span class="string">&quot;LT&quot;</span>: <span class="string">&quot;立陶宛&quot;</span>,</span><br><span class="line">    <span class="string">&quot;LU&quot;</span>: <span class="string">&quot;卢森堡&quot;</span>,</span><br><span class="line">    <span class="string">&quot;MO&quot;</span>: <span class="string">&quot;中国澳门特别行政区&quot;</span>,</span><br><span class="line">    <span class="string">&quot;MK&quot;</span>: <span class="string">&quot;马其顿&quot;</span>,</span><br><span class="line">    <span class="string">&quot;MG&quot;</span>: <span class="string">&quot;马达加斯加&quot;</span>,</span><br><span class="line">    <span class="string">&quot;MW&quot;</span>: <span class="string">&quot;马拉维&quot;</span>,</span><br><span class="line">    <span class="string">&quot;MY&quot;</span>: <span class="string">&quot;马来西亚&quot;</span>,</span><br><span class="line">    <span class="string">&quot;MV&quot;</span>: <span class="string">&quot;马尔代夫&quot;</span>,</span><br><span class="line">    <span class="string">&quot;ML&quot;</span>: <span class="string">&quot;马里&quot;</span>,</span><br><span class="line">    <span class="string">&quot;MT&quot;</span>: <span class="string">&quot;马耳他&quot;</span>,</span><br><span class="line">    <span class="string">&quot;MH&quot;</span>: <span class="string">&quot;马绍尔群岛&quot;</span>,</span><br><span class="line">    <span class="string">&quot;MQ&quot;</span>: <span class="string">&quot;马提尼克&quot;</span>,</span><br><span class="line">    <span class="string">&quot;MR&quot;</span>: <span class="string">&quot;毛里塔尼亚&quot;</span>,</span><br><span class="line">    <span class="string">&quot;MU&quot;</span>: <span class="string">&quot;毛里求斯&quot;</span>,</span><br><span class="line">    <span class="string">&quot;YT&quot;</span>: <span class="string">&quot;马约特&quot;</span>,</span><br><span class="line">    <span class="string">&quot;MX&quot;</span>: <span class="string">&quot;墨西哥&quot;</span>,</span><br><span class="line">    <span class="string">&quot;FM&quot;</span>: <span class="string">&quot;密克罗尼西亚&quot;</span>,</span><br><span class="line">    <span class="string">&quot;MD&quot;</span>: <span class="string">&quot;摩尔多瓦&quot;</span>,</span><br><span class="line">    <span class="string">&quot;MC&quot;</span>: <span class="string">&quot;摩纳哥&quot;</span>,</span><br><span class="line">    <span class="string">&quot;MN&quot;</span>: <span class="string">&quot;蒙古&quot;</span>,</span><br><span class="line">    <span class="string">&quot;ME&quot;</span>: <span class="string">&quot;黑山&quot;</span>,</span><br><span class="line">    <span class="string">&quot;MS&quot;</span>: <span class="string">&quot;蒙特塞拉特&quot;</span>,</span><br><span class="line">    <span class="string">&quot;MA&quot;</span>: <span class="string">&quot;摩洛哥&quot;</span>,</span><br><span class="line">    <span class="string">&quot;MZ&quot;</span>: <span class="string">&quot;莫桑比克&quot;</span>,</span><br><span class="line">    <span class="string">&quot;MM&quot;</span>: <span class="string">&quot;缅甸&quot;</span>,</span><br><span class="line">    <span class="string">&quot;NA&quot;</span>: <span class="string">&quot;纳米比亚&quot;</span>,</span><br><span class="line">    <span class="string">&quot;NR&quot;</span>: <span class="string">&quot;瑙鲁&quot;</span>,</span><br><span class="line">    <span class="string">&quot;NP&quot;</span>: <span class="string">&quot;尼泊尔&quot;</span>,</span><br><span class="line">    <span class="string">&quot;NL&quot;</span>: <span class="string">&quot;荷兰&quot;</span>,</span><br><span class="line">    <span class="string">&quot;AN&quot;</span>: <span class="string">&quot;荷属安的列斯&quot;</span>,</span><br><span class="line">    <span class="string">&quot;NC&quot;</span>: <span class="string">&quot;新喀里多尼亚&quot;</span>,</span><br><span class="line">    <span class="string">&quot;NZ&quot;</span>: <span class="string">&quot;新西兰&quot;</span>,</span><br><span class="line">    <span class="string">&quot;NI&quot;</span>: <span class="string">&quot;尼加拉瓜&quot;</span>,</span><br><span class="line">    <span class="string">&quot;NE&quot;</span>: <span class="string">&quot;尼日尔&quot;</span>,</span><br><span class="line">    <span class="string">&quot;NG&quot;</span>: <span class="string">&quot;尼日利亚&quot;</span>,</span><br><span class="line">    <span class="string">&quot;NU&quot;</span>: <span class="string">&quot;纽埃&quot;</span>,</span><br><span class="line">    <span class="string">&quot;NF&quot;</span>: <span class="string">&quot;诺福克岛&quot;</span>,</span><br><span class="line">    <span class="string">&quot;MP&quot;</span>: <span class="string">&quot;北马里亚纳群岛&quot;</span>,</span><br><span class="line">    <span class="string">&quot;NO&quot;</span>: <span class="string">&quot;挪威&quot;</span>,</span><br><span class="line">    <span class="string">&quot;OM&quot;</span>: <span class="string">&quot;阿曼&quot;</span>,</span><br><span class="line">    <span class="string">&quot;PK&quot;</span>: <span class="string">&quot;巴基斯坦&quot;</span>,</span><br><span class="line">    <span class="string">&quot;PW&quot;</span>: <span class="string">&quot;帕劳&quot;</span>,</span><br><span class="line">    <span class="string">&quot;PS&quot;</span>: <span class="string">&quot;巴勒斯坦&quot;</span>,</span><br><span class="line">    <span class="string">&quot;PA&quot;</span>: <span class="string">&quot;巴拿马&quot;</span>,</span><br><span class="line">    <span class="string">&quot;PG&quot;</span>: <span class="string">&quot;巴布亚新几内亚&quot;</span>,</span><br><span class="line">    <span class="string">&quot;PY&quot;</span>: <span class="string">&quot;巴拉圭&quot;</span>,</span><br><span class="line">    <span class="string">&quot;PE&quot;</span>: <span class="string">&quot;秘鲁&quot;</span>,</span><br><span class="line">    <span class="string">&quot;PH&quot;</span>: <span class="string">&quot;菲律宾&quot;</span>,</span><br><span class="line">    <span class="string">&quot;PN&quot;</span>: <span class="string">&quot;皮特凯恩群岛&quot;</span>,</span><br><span class="line">    <span class="string">&quot;PL&quot;</span>: <span class="string">&quot;波兰&quot;</span>,</span><br><span class="line">    <span class="string">&quot;PT&quot;</span>: <span class="string">&quot;葡萄牙&quot;</span>,</span><br><span class="line">    <span class="string">&quot;PR&quot;</span>: <span class="string">&quot;波多黎各&quot;</span>,</span><br><span class="line">    <span class="string">&quot;QA&quot;</span>: <span class="string">&quot;卡塔尔&quot;</span>,</span><br><span class="line">    <span class="string">&quot;RE&quot;</span>: <span class="string">&quot;留尼汪&quot;</span>,</span><br><span class="line">    <span class="string">&quot;RO&quot;</span>: <span class="string">&quot;罗马尼亚&quot;</span>,</span><br><span class="line">    <span class="string">&quot;RU&quot;</span>: <span class="string">&quot;俄罗斯&quot;</span>,</span><br><span class="line">    <span class="string">&quot;RW&quot;</span>: <span class="string">&quot;卢旺达&quot;</span>,</span><br><span class="line">    <span class="string">&quot;SH&quot;</span>: <span class="string">&quot;圣赫勒拿&quot;</span>,</span><br><span class="line">    <span class="string">&quot;KN&quot;</span>: <span class="string">&quot;圣基茨和尼维斯&quot;</span>,</span><br><span class="line">    <span class="string">&quot;LC&quot;</span>: <span class="string">&quot;圣卢西亚&quot;</span>,</span><br><span class="line">    <span class="string">&quot;PM&quot;</span>: <span class="string">&quot;圣皮埃尔和密克隆&quot;</span>,</span><br><span class="line">    <span class="string">&quot;VC&quot;</span>: <span class="string">&quot;圣文森特和格林纳丁斯&quot;</span>,</span><br><span class="line">    <span class="string">&quot;WS&quot;</span>: <span class="string">&quot;萨摩亚&quot;</span>,</span><br><span class="line">    <span class="string">&quot;SM&quot;</span>: <span class="string">&quot;圣马力诺&quot;</span>,</span><br><span class="line">    <span class="string">&quot;ST&quot;</span>: <span class="string">&quot;圣多美和普林西比&quot;</span>,</span><br><span class="line">    <span class="string">&quot;SA&quot;</span>: <span class="string">&quot;沙特阿拉伯&quot;</span>,</span><br><span class="line">    <span class="string">&quot;SN&quot;</span>: <span class="string">&quot;塞内加尔&quot;</span>,</span><br><span class="line">    <span class="string">&quot;RS&quot;</span>: <span class="string">&quot;塞尔维亚&quot;</span>,</span><br><span class="line">    <span class="string">&quot;SC&quot;</span>: <span class="string">&quot;塞舌尔&quot;</span>,</span><br><span class="line">    <span class="string">&quot;SL&quot;</span>: <span class="string">&quot;塞拉利昂&quot;</span>,</span><br><span class="line">    <span class="string">&quot;SG&quot;</span>: <span class="string">&quot;新加坡&quot;</span>,</span><br><span class="line">    <span class="string">&quot;SK&quot;</span>: <span class="string">&quot;斯洛伐克&quot;</span>,</span><br><span class="line">    <span class="string">&quot;SI&quot;</span>: <span class="string">&quot;斯洛文尼亚&quot;</span>,</span><br><span class="line">    <span class="string">&quot;SB&quot;</span>: <span class="string">&quot;所罗门群岛&quot;</span>,</span><br><span class="line">    <span class="string">&quot;SO&quot;</span>: <span class="string">&quot;索马里&quot;</span>,</span><br><span class="line">    <span class="string">&quot;ZA&quot;</span>: <span class="string">&quot;南非&quot;</span>,</span><br><span class="line">    <span class="string">&quot;GS&quot;</span>: <span class="string">&quot;南乔治亚岛和南桑威奇群岛&quot;</span>,</span><br><span class="line">    <span class="string">&quot;ES&quot;</span>: <span class="string">&quot;西班牙&quot;</span>,</span><br><span class="line">    <span class="string">&quot;LK&quot;</span>: <span class="string">&quot;斯里兰卡&quot;</span>,</span><br><span class="line">    <span class="string">&quot;SD&quot;</span>: <span class="string">&quot;苏丹&quot;</span>,</span><br><span class="line">    <span class="string">&quot;SR&quot;</span>: <span class="string">&quot;苏里南&quot;</span>,</span><br><span class="line">    <span class="string">&quot;SJ&quot;</span>: <span class="string">&quot;斯瓦尔巴特和扬马延&quot;</span>,</span><br><span class="line">    <span class="string">&quot;SZ&quot;</span>: <span class="string">&quot;斯威士兰&quot;</span>,</span><br><span class="line">    <span class="string">&quot;SE&quot;</span>: <span class="string">&quot;瑞典&quot;</span>,</span><br><span class="line">    <span class="string">&quot;CH&quot;</span>: <span class="string">&quot;瑞士&quot;</span>,</span><br><span class="line">    <span class="string">&quot;SY&quot;</span>: <span class="string">&quot;叙利亚&quot;</span>,</span><br><span class="line">    <span class="string">&quot;TW&quot;</span>: <span class="string">&quot;中国台湾&quot;</span>,</span><br><span class="line">    <span class="string">&quot;TJ&quot;</span>: <span class="string">&quot;塔吉克斯坦&quot;</span>,</span><br><span class="line">    <span class="string">&quot;TZ&quot;</span>: <span class="string">&quot;坦桑尼亚&quot;</span>,</span><br><span class="line">    <span class="string">&quot;TH&quot;</span>: <span class="string">&quot;泰国&quot;</span>,</span><br><span class="line">    <span class="string">&quot;TL&quot;</span>: <span class="string">&quot;东帝汶&quot;</span>,</span><br><span class="line">    <span class="string">&quot;TG&quot;</span>: <span class="string">&quot;多哥&quot;</span>,</span><br><span class="line">    <span class="string">&quot;TK&quot;</span>: <span class="string">&quot;托克劳&quot;</span>,</span><br><span class="line">    <span class="string">&quot;TO&quot;</span>: <span class="string">&quot;汤加&quot;</span>,</span><br><span class="line">    <span class="string">&quot;TT&quot;</span>: <span class="string">&quot;特立尼达和多巴哥&quot;</span>,</span><br><span class="line">    <span class="string">&quot;TN&quot;</span>: <span class="string">&quot;突尼斯&quot;</span>,</span><br><span class="line">    <span class="string">&quot;TR&quot;</span>: <span class="string">&quot;土耳其&quot;</span>,</span><br><span class="line">    <span class="string">&quot;TM&quot;</span>: <span class="string">&quot;土库曼斯坦&quot;</span>,</span><br><span class="line">    <span class="string">&quot;TC&quot;</span>: <span class="string">&quot;特克斯和凯科斯群岛&quot;</span>,</span><br><span class="line">    <span class="string">&quot;TV&quot;</span>: <span class="string">&quot;图瓦卢&quot;</span>,</span><br><span class="line">    <span class="string">&quot;UG&quot;</span>: <span class="string">&quot;乌干达&quot;</span>,</span><br><span class="line">    <span class="string">&quot;UA&quot;</span>: <span class="string">&quot;乌克兰&quot;</span>,</span><br><span class="line">    <span class="string">&quot;AE&quot;</span>: <span class="string">&quot;阿联酋&quot;</span>,</span><br><span class="line">    <span class="string">&quot;GB&quot;</span>: <span class="string">&quot;英国&quot;</span>,</span><br><span class="line">    <span class="string">&quot;US&quot;</span>: <span class="string">&quot;美国&quot;</span>,</span><br><span class="line">    <span class="string">&quot;UM&quot;</span>: <span class="string">&quot;美国本土外小岛屿&quot;</span>,</span><br><span class="line">    <span class="string">&quot;UY&quot;</span>: <span class="string">&quot;乌拉圭&quot;</span>,</span><br><span class="line">    <span class="string">&quot;UZ&quot;</span>: <span class="string">&quot;乌兹别克斯坦&quot;</span>,</span><br><span class="line">    <span class="string">&quot;VU&quot;</span>: <span class="string">&quot;瓦努阿图&quot;</span>,</span><br><span class="line">    <span class="string">&quot;VE&quot;</span>: <span class="string">&quot;委内瑞拉&quot;</span>,</span><br><span class="line">    <span class="string">&quot;VN&quot;</span>: <span class="string">&quot;越南&quot;</span>,</span><br><span class="line">    <span class="string">&quot;VG&quot;</span>: <span class="string">&quot;英属维尔京群岛&quot;</span>,</span><br><span class="line">    <span class="string">&quot;VI&quot;</span>: <span class="string">&quot;美属维尔京群岛&quot;</span>,</span><br><span class="line">    <span class="string">&quot;WF&quot;</span>: <span class="string">&quot;瓦利斯和富图纳&quot;</span>,</span><br><span class="line">    <span class="string">&quot;EH&quot;</span>: <span class="string">&quot;西撒哈拉&quot;</span>,</span><br><span class="line">    <span class="string">&quot;YE&quot;</span>: <span class="string">&quot;也门&quot;</span>,</span><br><span class="line">    <span class="string">&quot;ZM&quot;</span>: <span class="string">&quot;赞比亚&quot;</span>,</span><br><span class="line">    <span class="string">&quot;ZW&quot;</span>: <span class="string">&quot;津巴布韦&quot;</span></span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h2 id="troubleshooting">Troubleshooting</h2><ol type="1"><li>注意拼写错误，我把 <em><strong>form</strong></em> 拼成<em><strong>from</strong></em> 了（乐</li><li><code>fetch()</code> 方法仅允许 WEB API，无法直接将自己初始化的 JSON变量传进去</li><li>确定好 <code>sessionStorage</code> 的逻辑顺序，先存再取</li><li><code>token</code> 一定要 <code>设置域名白名单</code></li></ol><h2 id="结语">结语</h2><p>多位大厨正在努力烹饪，真是一场酣畅淋漓的 API 调用啊（不是</p>]]></content>
      
      
      <categories>
          
          <category> 编程开发 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 前端 </tag>
            
            <tag> Web </tag>
            
            <tag> jQuery </tag>
            
            <tag> JavaScript </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>机器学习笔记之线性回归的代价函数(Cost Function for Linear Regression)</title>
      <link href="/2024/01/30/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E4%B9%8B%E4%BB%A3%E4%BB%B7%E5%87%BD%E6%95%B0/"/>
      <url>/2024/01/30/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E4%B9%8B%E4%BB%A3%E4%BB%B7%E5%87%BD%E6%95%B0/</url>
      
        <content type="html"><![CDATA[<h2 id="前言">前言</h2><p>在监督学习中，代价函数用于衡量模型预测结果与实际观测值之间的差异或误差。其目标是使这个差异尽可能小，以便模型能够产生准确的预测。</p><p>代价函数的选择取决于所使用的算法和问题的性质。例如，在回归问题中，常见的代价函数包括均方误差（MeanSquared Error）和平均绝对误差（Mean AbsoluteError）。在分类问题中，常见的代价函数包括交叉熵损失（Cross-EntropyLoss）和 Hinge 损失等。本文将以线性回归(LinearRegression)为例，对均方误差的代价函数进行代码实现，不引入损失函数(LossFunction)。</p><h2 id="基本公式">基本公式</h2><h3 id="一元线性回归">一元线性回归</h3><p><span class="math display"><mjx-container class="MathJax" jax="SVG" display="true"><svg style="vertical-align: -0.65ex;" xmlns="http://www.w3.org/2000/svg" width="17.929ex" height="2.347ex" role="img" focusable="false" viewBox="0 -750 7924.7 1037.2"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="msub"><g data-mml-node="mi"><path data-c="1D453" d="M118 -162Q120 -162 124 -164T135 -167T147 -168Q160 -168 171 -155T187 -126Q197 -99 221 27T267 267T289 382V385H242Q195 385 192 387Q188 390 188 397L195 425Q197 430 203 430T250 431Q298 431 298 432Q298 434 307 482T319 540Q356 705 465 705Q502 703 526 683T550 630Q550 594 529 578T487 561Q443 561 443 603Q443 622 454 636T478 657L487 662Q471 668 457 668Q445 668 434 658T419 630Q412 601 403 552T387 469T380 433Q380 431 435 431Q480 431 487 430T498 424Q499 420 496 407T491 391Q489 386 482 386T428 385H372L349 263Q301 15 282 -47Q255 -132 212 -173Q175 -205 139 -205Q107 -205 81 -186T55 -132Q55 -95 76 -78T118 -61Q162 -61 162 -103Q162 -122 151 -136T127 -157L118 -162Z"></path></g><g data-mml-node="TeXAtom" transform="translate(523,-150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D464" d="M580 385Q580 406 599 424T641 443Q659 443 674 425T690 368Q690 339 671 253Q656 197 644 161T609 80T554 12T482 -11Q438 -11 404 5T355 48Q354 47 352 44Q311 -11 252 -11Q226 -11 202 -5T155 14T118 53T104 116Q104 170 138 262T173 379Q173 380 173 381Q173 390 173 393T169 400T158 404H154Q131 404 112 385T82 344T65 302T57 280Q55 278 41 278H27Q21 284 21 287Q21 293 29 315T52 366T96 418T161 441Q204 441 227 416T250 358Q250 340 217 250T184 111Q184 65 205 46T258 26Q301 26 334 87L339 96V119Q339 122 339 128T340 136T341 143T342 152T345 165T348 182T354 206T362 238T373 281Q402 395 406 404Q419 431 449 431Q468 431 475 421T483 402Q483 389 454 274T422 142Q420 131 420 107V100Q420 85 423 71T442 42T487 26Q558 26 600 148Q609 171 620 213T632 273Q632 306 619 325T593 357T580 385Z"></path></g><g data-mml-node="mo" transform="translate(716,0)"><path data-c="2C" d="M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z"></path></g><g data-mml-node="mi" transform="translate(994,0)"><path data-c="1D44F" d="M73 647Q73 657 77 670T89 683Q90 683 161 688T234 694Q246 694 246 685T212 542Q204 508 195 472T180 418L176 399Q176 396 182 402Q231 442 283 442Q345 442 383 396T422 280Q422 169 343 79T173 -11Q123 -11 82 27T40 150V159Q40 180 48 217T97 414Q147 611 147 623T109 637Q104 637 101 637H96Q86 637 83 637T76 640T73 647ZM336 325V331Q336 405 275 405Q258 405 240 397T207 376T181 352T163 330L157 322L136 236Q114 150 114 114Q114 66 138 42Q154 26 178 26Q211 26 245 58Q270 81 285 114T318 219Q336 291 336 325Z"></path></g></g></g><g data-mml-node="mo" transform="translate(1579.2,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(1968.2,0)"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g><g data-mml-node="mo" transform="translate(2540.2,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="mo" transform="translate(3207,0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g><g data-mml-node="mi" transform="translate(4262.8,0)"><path data-c="1D464" d="M580 385Q580 406 599 424T641 443Q659 443 674 425T690 368Q690 339 671 253Q656 197 644 161T609 80T554 12T482 -11Q438 -11 404 5T355 48Q354 47 352 44Q311 -11 252 -11Q226 -11 202 -5T155 14T118 53T104 116Q104 170 138 262T173 379Q173 380 173 381Q173 390 173 393T169 400T158 404H154Q131 404 112 385T82 344T65 302T57 280Q55 278 41 278H27Q21 284 21 287Q21 293 29 315T52 366T96 418T161 441Q204 441 227 416T250 358Q250 340 217 250T184 111Q184 65 205 46T258 26Q301 26 334 87L339 96V119Q339 122 339 128T340 136T341 143T342 152T345 165T348 182T354 206T362 238T373 281Q402 395 406 404Q419 431 449 431Q468 431 475 421T483 402Q483 389 454 274T422 142Q420 131 420 107V100Q420 85 423 71T442 42T487 26Q558 26 600 148Q609 171 620 213T632 273Q632 306 619 325T593 357T580 385Z"></path></g><g data-mml-node="mo" transform="translate(5201,0)"><path data-c="22C5" d="M78 250Q78 274 95 292T138 310Q162 310 180 294T199 251Q199 226 182 208T139 190T96 207T78 250Z"></path></g><g data-mml-node="mi" transform="translate(5701.2,0)"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g><g data-mml-node="mo" transform="translate(6495.4,0)"><path data-c="2B" d="M56 237T56 250T70 270H369V420L370 570Q380 583 389 583Q402 583 409 568V270H707Q722 262 722 250T707 230H409V-68Q401 -82 391 -82H389H387Q375 -82 369 -68V230H70Q56 237 56 250Z"></path></g><g data-mml-node="mi" transform="translate(7495.7,0)"><path data-c="1D44F" d="M73 647Q73 657 77 670T89 683Q90 683 161 688T234 694Q246 694 246 685T212 542Q204 508 195 472T180 418L176 399Q176 396 182 402Q231 442 283 442Q345 442 383 396T422 280Q422 169 343 79T173 -11Q123 -11 82 27T40 150V159Q40 180 48 217T97 414Q147 611 147 623T109 637Q104 637 101 637H96Q86 637 83 637T76 640T73 647ZM336 325V331Q336 405 275 405Q258 405 240 397T207 376T181 352T163 330L157 322L136 236Q114 150 114 114Q114 66 138 42Q154 26 178 26Q211 26 245 58Q270 81 285 114T318 219Q336 291 336 325Z"></path></g></g></g></svg></mjx-container></span></p><p>其中， w 和 b可以称之为“参数”、“系数”或“权重”，用于绘制一条样本拟合曲线以拟合样本数据。</p><h3 id="多元线性回归">多元线性回归</h3><p><span class="math display"><mjx-container class="MathJax" jax="SVG" display="true"><svg style="vertical-align: -0.65ex;" xmlns="http://www.w3.org/2000/svg" width="49.4ex" height="2.347ex" role="img" focusable="false" viewBox="0 -750 21834.7 1037.2"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="msub"><g data-mml-node="mi"><path data-c="1D453" d="M118 -162Q120 -162 124 -164T135 -167T147 -168Q160 -168 171 -155T187 -126Q197 -99 221 27T267 267T289 382V385H242Q195 385 192 387Q188 390 188 397L195 425Q197 430 203 430T250 431Q298 431 298 432Q298 434 307 482T319 540Q356 705 465 705Q502 703 526 683T550 630Q550 594 529 578T487 561Q443 561 443 603Q443 622 454 636T478 657L487 662Q471 668 457 668Q445 668 434 658T419 630Q412 601 403 552T387 469T380 433Q380 431 435 431Q480 431 487 430T498 424Q499 420 496 407T491 391Q489 386 482 386T428 385H372L349 263Q301 15 282 -47Q255 -132 212 -173Q175 -205 139 -205Q107 -205 81 -186T55 -132Q55 -95 76 -78T118 -61Q162 -61 162 -103Q162 -122 151 -136T127 -157L118 -162Z"></path></g><g data-mml-node="TeXAtom" transform="translate(523,-150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D464" d="M580 385Q580 406 599 424T641 443Q659 443 674 425T690 368Q690 339 671 253Q656 197 644 161T609 80T554 12T482 -11Q438 -11 404 5T355 48Q354 47 352 44Q311 -11 252 -11Q226 -11 202 -5T155 14T118 53T104 116Q104 170 138 262T173 379Q173 380 173 381Q173 390 173 393T169 400T158 404H154Q131 404 112 385T82 344T65 302T57 280Q55 278 41 278H27Q21 284 21 287Q21 293 29 315T52 366T96 418T161 441Q204 441 227 416T250 358Q250 340 217 250T184 111Q184 65 205 46T258 26Q301 26 334 87L339 96V119Q339 122 339 128T340 136T341 143T342 152T345 165T348 182T354 206T362 238T373 281Q402 395 406 404Q419 431 449 431Q468 431 475 421T483 402Q483 389 454 274T422 142Q420 131 420 107V100Q420 85 423 71T442 42T487 26Q558 26 600 148Q609 171 620 213T632 273Q632 306 619 325T593 357T580 385Z"></path></g><g data-mml-node="mo" transform="translate(716,0)"><path data-c="2C" d="M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z"></path></g><g data-mml-node="mi" transform="translate(994,0)"><path data-c="1D44F" d="M73 647Q73 657 77 670T89 683Q90 683 161 688T234 694Q246 694 246 685T212 542Q204 508 195 472T180 418L176 399Q176 396 182 402Q231 442 283 442Q345 442 383 396T422 280Q422 169 343 79T173 -11Q123 -11 82 27T40 150V159Q40 180 48 217T97 414Q147 611 147 623T109 637Q104 637 101 637H96Q86 637 83 637T76 640T73 647ZM336 325V331Q336 405 275 405Q258 405 240 397T207 376T181 352T163 330L157 322L136 236Q114 150 114 114Q114 66 138 42Q154 26 178 26Q211 26 245 58Q270 81 285 114T318 219Q336 291 336 325Z"></path></g></g></g><g data-mml-node="mo" transform="translate(1579.2,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(1968.2,0)"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g><g data-mml-node="mo" transform="translate(2540.2,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="mo" transform="translate(3207,0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g><g data-mml-node="msub" transform="translate(4262.8,0)"><g data-mml-node="mi"><path data-c="1D464" d="M580 385Q580 406 599 424T641 443Q659 443 674 425T690 368Q690 339 671 253Q656 197 644 161T609 80T554 12T482 -11Q438 -11 404 5T355 48Q354 47 352 44Q311 -11 252 -11Q226 -11 202 -5T155 14T118 53T104 116Q104 170 138 262T173 379Q173 380 173 381Q173 390 173 393T169 400T158 404H154Q131 404 112 385T82 344T65 302T57 280Q55 278 41 278H27Q21 284 21 287Q21 293 29 315T52 366T96 418T161 441Q204 441 227 416T250 358Q250 340 217 250T184 111Q184 65 205 46T258 26Q301 26 334 87L339 96V119Q339 122 339 128T340 136T341 143T342 152T345 165T348 182T354 206T362 238T373 281Q402 395 406 404Q419 431 449 431Q468 431 475 421T483 402Q483 389 454 274T422 142Q420 131 420 107V100Q420 85 423 71T442 42T487 26Q558 26 600 148Q609 171 620 213T632 273Q632 306 619 325T593 357T580 385Z"></path></g><g data-mml-node="TeXAtom" transform="translate(749,-150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mn"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g></g></g><g data-mml-node="mo" transform="translate(5637.5,0)"><path data-c="22C5" d="M78 250Q78 274 95 292T138 310Q162 310 180 294T199 251Q199 226 182 208T139 190T96 207T78 250Z"></path></g><g data-mml-node="mi" transform="translate(6137.8,0)"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g><g data-mml-node="mo" transform="translate(6932,0)"><path data-c="2B" d="M56 237T56 250T70 270H369V420L370 570Q380 583 389 583Q402 583 409 568V270H707Q722 262 722 250T707 230H409V-68Q401 -82 391 -82H389H387Q375 -82 369 -68V230H70Q56 237 56 250Z"></path></g><g data-mml-node="msub" transform="translate(7932.2,0)"><g data-mml-node="mi"><path data-c="1D464" d="M580 385Q580 406 599 424T641 443Q659 443 674 425T690 368Q690 339 671 253Q656 197 644 161T609 80T554 12T482 -11Q438 -11 404 5T355 48Q354 47 352 44Q311 -11 252 -11Q226 -11 202 -5T155 14T118 53T104 116Q104 170 138 262T173 379Q173 380 173 381Q173 390 173 393T169 400T158 404H154Q131 404 112 385T82 344T65 302T57 280Q55 278 41 278H27Q21 284 21 287Q21 293 29 315T52 366T96 418T161 441Q204 441 227 416T250 358Q250 340 217 250T184 111Q184 65 205 46T258 26Q301 26 334 87L339 96V119Q339 122 339 128T340 136T341 143T342 152T345 165T348 182T354 206T362 238T373 281Q402 395 406 404Q419 431 449 431Q468 431 475 421T483 402Q483 389 454 274T422 142Q420 131 420 107V100Q420 85 423 71T442 42T487 26Q558 26 600 148Q609 171 620 213T632 273Q632 306 619 325T593 357T580 385Z"></path></g><g data-mml-node="TeXAtom" transform="translate(749,-150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mn"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path></g></g></g><g data-mml-node="mo" transform="translate(9307,0)"><path data-c="22C5" d="M78 250Q78 274 95 292T138 310Q162 310 180 294T199 251Q199 226 182 208T139 190T96 207T78 250Z"></path></g><g data-mml-node="mi" transform="translate(9807.2,0)"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g><g data-mml-node="mo" transform="translate(10601.4,0)"><path data-c="2B" d="M56 237T56 250T70 270H369V420L370 570Q380 583 389 583Q402 583 409 568V270H707Q722 262 722 250T707 230H409V-68Q401 -82 391 -82H389H387Q375 -82 369 -68V230H70Q56 237 56 250Z"></path></g><g data-mml-node="msub" transform="translate(11601.7,0)"><g data-mml-node="mi"><path data-c="1D464" d="M580 385Q580 406 599 424T641 443Q659 443 674 425T690 368Q690 339 671 253Q656 197 644 161T609 80T554 12T482 -11Q438 -11 404 5T355 48Q354 47 352 44Q311 -11 252 -11Q226 -11 202 -5T155 14T118 53T104 116Q104 170 138 262T173 379Q173 380 173 381Q173 390 173 393T169 400T158 404H154Q131 404 112 385T82 344T65 302T57 280Q55 278 41 278H27Q21 284 21 287Q21 293 29 315T52 366T96 418T161 441Q204 441 227 416T250 358Q250 340 217 250T184 111Q184 65 205 46T258 26Q301 26 334 87L339 96V119Q339 122 339 128T340 136T341 143T342 152T345 165T348 182T354 206T362 238T373 281Q402 395 406 404Q419 431 449 431Q468 431 475 421T483 402Q483 389 454 274T422 142Q420 131 420 107V100Q420 85 423 71T442 42T487 26Q558 26 600 148Q609 171 620 213T632 273Q632 306 619 325T593 357T580 385Z"></path></g><g data-mml-node="TeXAtom" transform="translate(749,-150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mn"><path data-c="33" d="M127 463Q100 463 85 480T69 524Q69 579 117 622T233 665Q268 665 277 664Q351 652 390 611T430 522Q430 470 396 421T302 350L299 348Q299 347 308 345T337 336T375 315Q457 262 457 175Q457 96 395 37T238 -22Q158 -22 100 21T42 130Q42 158 60 175T105 193Q133 193 151 175T169 130Q169 119 166 110T159 94T148 82T136 74T126 70T118 67L114 66Q165 21 238 21Q293 21 321 74Q338 107 338 175V195Q338 290 274 322Q259 328 213 329L171 330L168 332Q166 335 166 348Q166 366 174 366Q202 366 232 371Q266 376 294 413T322 525V533Q322 590 287 612Q265 626 240 626Q208 626 181 615T143 592T132 580H135Q138 579 143 578T153 573T165 566T175 555T183 540T186 520Q186 498 172 481T127 463Z"></path></g></g></g><g data-mml-node="mo" transform="translate(12976.4,0)"><path data-c="22C5" d="M78 250Q78 274 95 292T138 310Q162 310 180 294T199 251Q199 226 182 208T139 190T96 207T78 250Z"></path></g><g data-mml-node="mi" transform="translate(13476.7,0)"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g><g data-mml-node="mo" transform="translate(14270.9,0)"><path data-c="2B" d="M56 237T56 250T70 270H369V420L370 570Q380 583 389 583Q402 583 409 568V270H707Q722 262 722 250T707 230H409V-68Q401 -82 391 -82H389H387Q375 -82 369 -68V230H70Q56 237 56 250Z"></path></g><g data-mml-node="mo" transform="translate(15271.1,0)"><path data-c="2026" d="M78 60Q78 84 95 102T138 120Q162 120 180 104T199 61Q199 36 182 18T139 0T96 17T78 60ZM525 60Q525 84 542 102T585 120Q609 120 627 104T646 61Q646 36 629 18T586 0T543 17T525 60ZM972 60Q972 84 989 102T1032 120Q1056 120 1074 104T1093 61Q1093 36 1076 18T1033 0T990 17T972 60Z"></path></g><g data-mml-node="mo" transform="translate(16665.3,0)"><path data-c="2B" d="M56 237T56 250T70 270H369V420L370 570Q380 583 389 583Q402 583 409 568V270H707Q722 262 722 250T707 230H409V-68Q401 -82 391 -82H389H387Q375 -82 369 -68V230H70Q56 237 56 250Z"></path></g><g data-mml-node="msub" transform="translate(17665.5,0)"><g data-mml-node="mi"><path data-c="1D464" d="M580 385Q580 406 599 424T641 443Q659 443 674 425T690 368Q690 339 671 253Q656 197 644 161T609 80T554 12T482 -11Q438 -11 404 5T355 48Q354 47 352 44Q311 -11 252 -11Q226 -11 202 -5T155 14T118 53T104 116Q104 170 138 262T173 379Q173 380 173 381Q173 390 173 393T169 400T158 404H154Q131 404 112 385T82 344T65 302T57 280Q55 278 41 278H27Q21 284 21 287Q21 293 29 315T52 366T96 418T161 441Q204 441 227 416T250 358Q250 340 217 250T184 111Q184 65 205 46T258 26Q301 26 334 87L339 96V119Q339 122 339 128T340 136T341 143T342 152T345 165T348 182T354 206T362 238T373 281Q402 395 406 404Q419 431 449 431Q468 431 475 421T483 402Q483 389 454 274T422 142Q420 131 420 107V100Q420 85 423 71T442 42T487 26Q558 26 600 148Q609 171 620 213T632 273Q632 306 619 325T593 357T580 385Z"></path></g><g data-mml-node="TeXAtom" transform="translate(749,-150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"></path></g></g></g><g data-mml-node="mo" transform="translate(19111,0)"><path data-c="22C5" d="M78 250Q78 274 95 292T138 310Q162 310 180 294T199 251Q199 226 182 208T139 190T96 207T78 250Z"></path></g><g data-mml-node="mi" transform="translate(19611.2,0)"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g><g data-mml-node="mo" transform="translate(20405.5,0)"><path data-c="2B" d="M56 237T56 250T70 270H369V420L370 570Q380 583 389 583Q402 583 409 568V270H707Q722 262 722 250T707 230H409V-68Q401 -82 391 -82H389H387Q375 -82 369 -68V230H70Q56 237 56 250Z"></path></g><g data-mml-node="mi" transform="translate(21405.7,0)"><path data-c="1D44F" d="M73 647Q73 657 77 670T89 683Q90 683 161 688T234 694Q246 694 246 685T212 542Q204 508 195 472T180 418L176 399Q176 396 182 402Q231 442 283 442Q345 442 383 396T422 280Q422 169 343 79T173 -11Q123 -11 82 27T40 150V159Q40 180 48 217T97 414Q147 611 147 623T109 637Q104 637 101 637H96Q86 637 83 637T76 640T73 647ZM336 325V331Q336 405 275 405Q258 405 240 397T207 376T181 352T163 330L157 322L136 236Q114 150 114 114Q114 66 138 42Q154 26 178 26Q211 26 245 58Q270 81 285 114T318 219Q336 291 336 325Z"></path></g></g></g></svg></mjx-container></span></p><p>其中， w1,w2,…,wn 和 b可以称之为“参数”、“系数”或“权重”，用于绘制一条更复杂的样本拟合曲线以拟合不同情况下的样本数据，使拟合度更高，但也应该注意防止过拟合的情况发生。</p><p>过拟合(Overfitting)指的是模型过度拟合了训练数据中的噪声和细节，从而失去了泛化能力，无法很好地适应新的、未见过的数据。简单举例来讲，在我们拿到了一个数据集后，一个本可以用一条抛物线就可以描述趋势的函数，却用了参数更多的复杂函数以保证了每个数据对应的点都与其高度拟合，虽然在已知的数据集中达到了极高的拟合度，但却无法很好的正确预测出未来曲线的变化情况，使函数失效。</p><h3 id="代价函数">代价函数</h3><p><span class="math display"><mjx-container class="MathJax" jax="SVG" display="true"><svg style="vertical-align: -2.819ex;" xmlns="http://www.w3.org/2000/svg" width="34.781ex" height="6.354ex" role="img" focusable="false" viewBox="0 -1562.5 15373.3 2808.5"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D43D" d="M447 625Q447 637 354 637H329Q323 642 323 645T325 664Q329 677 335 683H352Q393 681 498 681Q541 681 568 681T605 682T619 682Q633 682 633 672Q633 670 630 658Q626 642 623 640T604 637Q552 637 545 623Q541 610 483 376Q420 128 419 127Q397 64 333 21T195 -22Q137 -22 97 8T57 88Q57 130 80 152T132 174Q177 174 182 130Q182 98 164 80T123 56Q115 54 115 53T122 44Q148 15 197 15Q235 15 271 47T324 130Q328 142 387 380T447 625Z"></path></g><g data-mml-node="mo" transform="translate(633,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(1022,0)"><path data-c="1D464" d="M580 385Q580 406 599 424T641 443Q659 443 674 425T690 368Q690 339 671 253Q656 197 644 161T609 80T554 12T482 -11Q438 -11 404 5T355 48Q354 47 352 44Q311 -11 252 -11Q226 -11 202 -5T155 14T118 53T104 116Q104 170 138 262T173 379Q173 380 173 381Q173 390 173 393T169 400T158 404H154Q131 404 112 385T82 344T65 302T57 280Q55 278 41 278H27Q21 284 21 287Q21 293 29 315T52 366T96 418T161 441Q204 441 227 416T250 358Q250 340 217 250T184 111Q184 65 205 46T258 26Q301 26 334 87L339 96V119Q339 122 339 128T340 136T341 143T342 152T345 165T348 182T354 206T362 238T373 281Q402 395 406 404Q419 431 449 431Q468 431 475 421T483 402Q483 389 454 274T422 142Q420 131 420 107V100Q420 85 423 71T442 42T487 26Q558 26 600 148Q609 171 620 213T632 273Q632 306 619 325T593 357T580 385Z"></path></g><g data-mml-node="mo" transform="translate(1738,0)"><path data-c="2C" d="M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z"></path></g><g data-mml-node="mi" transform="translate(2182.7,0)"><path data-c="1D44F" d="M73 647Q73 657 77 670T89 683Q90 683 161 688T234 694Q246 694 246 685T212 542Q204 508 195 472T180 418L176 399Q176 396 182 402Q231 442 283 442Q345 442 383 396T422 280Q422 169 343 79T173 -11Q123 -11 82 27T40 150V159Q40 180 48 217T97 414Q147 611 147 623T109 637Q104 637 101 637H96Q86 637 83 637T76 640T73 647ZM336 325V331Q336 405 275 405Q258 405 240 397T207 376T181 352T163 330L157 322L136 236Q114 150 114 114Q114 66 138 42Q154 26 178 26Q211 26 245 58Q270 81 285 114T318 219Q336 291 336 325Z"></path></g><g data-mml-node="mo" transform="translate(2611.7,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="mo" transform="translate(3278.4,0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g><g data-mml-node="mfrac" transform="translate(4334.2,0)"><g data-mml-node="mn" transform="translate(659,676)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g><g data-mml-node="mrow" transform="translate(220,-686)"><g data-mml-node="mn"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path></g><g data-mml-node="mi" transform="translate(500,0)"><path data-c="1D45A" d="M21 287Q22 293 24 303T36 341T56 388T88 425T132 442T175 435T205 417T221 395T229 376L231 369Q231 367 232 367L243 378Q303 442 384 442Q401 442 415 440T441 433T460 423T475 411T485 398T493 385T497 373T500 364T502 357L510 367Q573 442 659 442Q713 442 746 415T780 336Q780 285 742 178T704 50Q705 36 709 31T724 26Q752 26 776 56T815 138Q818 149 821 151T837 153Q857 153 857 145Q857 144 853 130Q845 101 831 73T785 17T716 -10Q669 -10 648 17T627 73Q627 92 663 193T700 345Q700 404 656 404H651Q565 404 506 303L499 291L466 157Q433 26 428 16Q415 -11 385 -11Q372 -11 364 -4T353 8T350 18Q350 29 384 161L420 307Q423 322 423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 181Q151 335 151 342Q154 357 154 369Q154 405 129 405Q107 405 92 377T69 316T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g></g><rect width="1578" height="60" x="120" y="220"></rect></g><g data-mml-node="munderover" transform="translate(6318.9,0)"><g data-mml-node="mo"><path data-c="2211" d="M60 948Q63 950 665 950H1267L1325 815Q1384 677 1388 669H1348L1341 683Q1320 724 1285 761Q1235 809 1174 838T1033 881T882 898T699 902H574H543H251L259 891Q722 258 724 252Q725 250 724 246Q721 243 460 -56L196 -356Q196 -357 407 -357Q459 -357 548 -357T676 -358Q812 -358 896 -353T1063 -332T1204 -283T1307 -196Q1328 -170 1348 -124H1388Q1388 -125 1381 -145T1356 -210T1325 -294L1267 -449L666 -450Q64 -450 61 -448Q55 -446 55 -439Q55 -437 57 -433L590 177Q590 178 557 222T452 366T322 544L56 909L55 924Q55 945 60 948Z"></path></g><g data-mml-node="TeXAtom" transform="translate(148.2,-1087.9) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mo" transform="translate(345,0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g><g data-mml-node="mn" transform="translate(1123,0)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g></g><g data-mml-node="TeXAtom" transform="translate(411.6,1150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D45A" d="M21 287Q22 293 24 303T36 341T56 388T88 425T132 442T175 435T205 417T221 395T229 376L231 369Q231 367 232 367L243 378Q303 442 384 442Q401 442 415 440T441 433T460 423T475 411T485 398T493 385T497 373T500 364T502 357L510 367Q573 442 659 442Q713 442 746 415T780 336Q780 285 742 178T704 50Q705 36 709 31T724 26Q752 26 776 56T815 138Q818 149 821 151T837 153Q857 153 857 145Q857 144 853 130Q845 101 831 73T785 17T716 -10Q669 -10 648 17T627 73Q627 92 663 193T700 345Q700 404 656 404H651Q565 404 506 303L499 291L466 157Q433 26 428 16Q415 -11 385 -11Q372 -11 364 -4T353 8T350 18Q350 29 384 161L420 307Q423 322 423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 181Q151 335 151 342Q154 357 154 369Q154 405 129 405Q107 405 92 377T69 316T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g></g></g><g data-mml-node="mo" transform="translate(7762.9,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="msub" transform="translate(8151.9,0)"><g data-mml-node="mi"><path data-c="1D453" d="M118 -162Q120 -162 124 -164T135 -167T147 -168Q160 -168 171 -155T187 -126Q197 -99 221 27T267 267T289 382V385H242Q195 385 192 387Q188 390 188 397L195 425Q197 430 203 430T250 431Q298 431 298 432Q298 434 307 482T319 540Q356 705 465 705Q502 703 526 683T550 630Q550 594 529 578T487 561Q443 561 443 603Q443 622 454 636T478 657L487 662Q471 668 457 668Q445 668 434 658T419 630Q412 601 403 552T387 469T380 433Q380 431 435 431Q480 431 487 430T498 424Q499 420 496 407T491 391Q489 386 482 386T428 385H372L349 263Q301 15 282 -47Q255 -132 212 -173Q175 -205 139 -205Q107 -205 81 -186T55 -132Q55 -95 76 -78T118 -61Q162 -61 162 -103Q162 -122 151 -136T127 -157L118 -162Z"></path></g><g data-mml-node="TeXAtom" transform="translate(523,-150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D464" d="M580 385Q580 406 599 424T641 443Q659 443 674 425T690 368Q690 339 671 253Q656 197 644 161T609 80T554 12T482 -11Q438 -11 404 5T355 48Q354 47 352 44Q311 -11 252 -11Q226 -11 202 -5T155 14T118 53T104 116Q104 170 138 262T173 379Q173 380 173 381Q173 390 173 393T169 400T158 404H154Q131 404 112 385T82 344T65 302T57 280Q55 278 41 278H27Q21 284 21 287Q21 293 29 315T52 366T96 418T161 441Q204 441 227 416T250 358Q250 340 217 250T184 111Q184 65 205 46T258 26Q301 26 334 87L339 96V119Q339 122 339 128T340 136T341 143T342 152T345 165T348 182T354 206T362 238T373 281Q402 395 406 404Q419 431 449 431Q468 431 475 421T483 402Q483 389 454 274T422 142Q420 131 420 107V100Q420 85 423 71T442 42T487 26Q558 26 600 148Q609 171 620 213T632 273Q632 306 619 325T593 357T580 385Z"></path></g><g data-mml-node="mo" transform="translate(716,0)"><path data-c="2C" d="M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z"></path></g><g data-mml-node="mi" transform="translate(994,0)"><path data-c="1D44F" d="M73 647Q73 657 77 670T89 683Q90 683 161 688T234 694Q246 694 246 685T212 542Q204 508 195 472T180 418L176 399Q176 396 182 402Q231 442 283 442Q345 442 383 396T422 280Q422 169 343 79T173 -11Q123 -11 82 27T40 150V159Q40 180 48 217T97 414Q147 611 147 623T109 637Q104 637 101 637H96Q86 637 83 637T76 640T73 647ZM336 325V331Q336 405 275 405Q258 405 240 397T207 376T181 352T163 330L157 322L136 236Q114 150 114 114Q114 66 138 42Q154 26 178 26Q211 26 245 58Q270 81 285 114T318 219Q336 291 336 325Z"></path></g></g></g><g data-mml-node="mo" transform="translate(9731.1,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="msup" transform="translate(10120.1,0)"><g data-mml-node="mi"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g><g data-mml-node="TeXAtom" transform="translate(605,413) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mo"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(389,0)"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mo" transform="translate(734,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g></g></g><g data-mml-node="mo" transform="translate(11569.2,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="mo" transform="translate(12180.4,0)"><path data-c="2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z"></path></g><g data-mml-node="msup" transform="translate(13180.6,0)"><g data-mml-node="mi"><path data-c="1D466" d="M21 287Q21 301 36 335T84 406T158 442Q199 442 224 419T250 355Q248 336 247 334Q247 331 231 288T198 191T182 105Q182 62 196 45T238 27Q261 27 281 38T312 61T339 94Q339 95 344 114T358 173T377 247Q415 397 419 404Q432 431 462 431Q475 431 483 424T494 412T496 403Q496 390 447 193T391 -23Q363 -106 294 -155T156 -205Q111 -205 77 -183T43 -117Q43 -95 50 -80T69 -58T89 -48T106 -45Q150 -45 150 -87Q150 -107 138 -122T115 -142T102 -147L99 -148Q101 -153 118 -160T152 -167H160Q177 -167 186 -165Q219 -156 247 -127T290 -65T313 -9T321 21L315 17Q309 13 296 6T270 -6Q250 -11 231 -11Q185 -11 150 11T104 82Q103 89 103 113Q103 170 138 262T173 379Q173 380 173 381Q173 390 173 393T169 400T158 404H154Q131 404 112 385T82 344T65 302T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="TeXAtom" transform="translate(523,413) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mo"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(389,0)"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mo" transform="translate(734,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g></g></g><g data-mml-node="msup" transform="translate(14547.7,0)"><g data-mml-node="mo"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="TeXAtom" transform="translate(422,413) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mn"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path></g></g></g></g></g></svg></mjx-container></span></p><h2 id="代码实现">代码实现</h2><p>首先我们定义一个代价函数的函数，其次再初始化数据集，最后利用matplotlib进行绘制。</p><h3 id="引入头文件">引入头文件</h3><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</span><br></pre></td></tr></table></figure><h3 id="代价函数-1">代价函数</h3><p>该部分利用 numpy 实现了代价函数，numpy 在高维矩阵运算时的速度比python 高。</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 需要 w,b 两个参数和 x,y 两个变量</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">cost_function</span>(<span class="params">w, b, x, y</span>):</span><br><span class="line">    m = x.shape[<span class="number">0</span>]</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 计算预测值</span></span><br><span class="line">    f_wb = np.dot(x, w) + b</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 计算代价函数(numpy 向量化)</span></span><br><span class="line">    cost = np.<span class="built_in">sum</span>((f_wb - y) ** <span class="number">2</span>) / (<span class="number">2</span> * m)</span><br><span class="line">    <span class="keyword">return</span> cost</span><br></pre></td></tr></table></figure><h3 id="初始化数据集">初始化数据集</h3><p>这一步，我们随机定义一组数据集，并定义w 和 b 的取值范围，最后计算w[i] 和 b[i] 对应的 J(w, b) (z 轴) 的值。</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 数据集</span></span><br><span class="line">x_train = np.array([<span class="number">1.0</span>, <span class="number">1.7</span>, <span class="number">2.0</span>, <span class="number">2.5</span>, <span class="number">3.0</span>, <span class="number">3.2</span>])</span><br><span class="line">y_train = np.array([<span class="number">250</span>, <span class="number">300</span>, <span class="number">480</span>, <span class="number">430</span>, <span class="number">630</span>, <span class="number">730</span>, ])</span><br><span class="line"></span><br><span class="line"><span class="comment"># 定义 w 和 b 的取值范围</span></span><br><span class="line">w_range = np.array([<span class="number">200</span> - <span class="number">200.</span>, <span class="number">200</span> + <span class="number">200</span>])</span><br><span class="line">b_range = np.array([<span class="number">50</span> - <span class="number">300.</span>, <span class="number">50</span> + <span class="number">300</span>])</span><br><span class="line"><span class="comment"># 按照步长 100 转化成均匀分布的数值序列，作为 w 和 b 的具体取值</span></span><br><span class="line">w_space = np.linspace(*w_range, <span class="number">100</span>)</span><br><span class="line">b_space = np.linspace(*b_range, <span class="number">100</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 生成网格点坐标矩阵， 使 w 和 b 一一对应，防止出现缺失值的情况。</span></span><br><span class="line">tmp_w, tmp_b = np.meshgrid(w_space, b_space)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 生成一个和 b (或者 w)一样的零向量</span></span><br><span class="line">z = np.zeros_like(tmp_b)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 对应 w 和 b 的坐标分别计算 z 值， 即 J(w,b) 的值</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(tmp_w.shape[<span class="number">0</span>]):</span><br><span class="line">    <span class="keyword">for</span> j <span class="keyword">in</span> <span class="built_in">range</span>(tmp_w.shape[<span class="number">1</span>]):</span><br><span class="line">        z[i, j] = cost_function(tmp_w[i][j], tmp_b[i][j], x_train, y_train)</span><br><span class="line">        <span class="keyword">if</span> z[i, j] == <span class="number">0</span>:</span><br><span class="line">            <span class="comment"># 防止出现除以 0 的情况，所以赋值为一个非常小的数减小影响。</span></span><br><span class="line">            z[i, j] = <span class="number">1e-6</span></span><br></pre></td></tr></table></figure><h3 id="绘图">绘图</h3><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 创建三维坐标系</span></span><br><span class="line">fig = plt.figure()</span><br><span class="line">ax = fig.add_subplot(<span class="number">111</span>, projection=<span class="string">'3d'</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 绘制面</span></span><br><span class="line">plt.plot_surface(tmp_b, tmp_w, z, cmap=<span class="string">'virdis'</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 出图</span></span><br><span class="line">plt.show()</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="图像结果">图像结果</h2><div class="img-wrap"><div class="img-bg"><img class="img" src="https://kclub-phost-1313107835.cos.ap-nanjing.myqcloud.com/Phost%2F_posts%2Fcost_func_plot.webp" alt="输出结果"></div><span class="image-caption">输出结果</span></div><h2 id="troubleshooting">Troubleshooting</h2><ol type="1"><li>在 matplotlib 生成三维图形时，注意 z轴只接受二维向量，否则无法正常绘制。</li><li>在进行矩阵运算时，尽量使用 numpy 库以获取最大的性能。</li><li>在生成 w 和 b 的范围时，要注意一定要使用 ‘np.meshgrid’方法，否则会由于部分 b 没有对应的 w 而无法计算代价函数 J(w,b)。</li><li>通常情况下，代价函数的值不会等于零，因为模型参数的取值通常会使得代价函数的值大于零。但是，由于计算精度的限制或者其他因素，可能会出现代价函数值非常接近零的情况。如果在后续计算中出现除以零的情况，就会导致错误或异常。因此，为了避免除以零的情况，可以将代价函数值为零的情况手动调整为一个非零的小值，如1e-6。这样可以保证程序在计算时不会出现除以零的错误，同时也不会显著影响到代价函数值。</li></ol><h2 id="参考资料">参考资料</h2><p>(强推|双字)2022吴恩达机器学习Deeplearning.ai课程: <a href="https://www.bilibili.com/video/BV1Pa411X76s">https://www.bilibili.com/video/BV1Pa411X76s</a></p>]]></content>
      
      
      <categories>
          
          <category> 编程开发 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 代价函数 </tag>
            
            <tag> 学习笔记 </tag>
            
            <tag> 机器学习 </tag>
            
            <tag> 统计学习方法 </tag>
            
            <tag> Cost Function </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>PVE软盘安装系统Tips</title>
      <link href="/2023/12/03/PVE%E8%BD%AF%E7%9B%98%E5%AE%89%E8%A3%85%E7%B3%BB%E7%BB%9FTips/"/>
      <url>/2023/12/03/PVE%E8%BD%AF%E7%9B%98%E5%AE%89%E8%A3%85%E7%B3%BB%E7%BB%9FTips/</url>
      
        <content type="html"><![CDATA[<h2 id="前言">前言</h2><p>在我尝试 PVE的过程中发现了很多问题，包括但不限于自定义性不足，不支持软盘 (Floppy)引导等等，但好在 PVE 是基于 <code>qemu-kvm</code> 的，如此一来，我们利用 Shell 就有很大的操作空间。为此，我通过软盘安装了<code>MS DOS 7.1</code>，以下是安装过程记录。</p><h2 id="过程记录">过程记录</h2><h3 id="软盘镜像下载">软盘镜像下载</h3><p>分享一个很好的镜像站，收录了很多网上较难找的旧系统、软件、游戏等：<ahref="https://winworldpc.com/home">WinWorld</a></p><div class="tip info"><p>由于是公益性质网站，每天下载限额25次。</p></div><div class="img-wrap"><div class="img-bg"><img class="img" src="https://kclub-phost-1313107835.cos.ap-nanjing.myqcloud.com/Phost/pvetips/WinWorld.webp" alt="WinWorld"/></div><span class="image-caption">WinWorld</span></div><h3 id="pve-安装软盘系统">PVE 安装软盘系统</h3><ol type="1"><li><p>上传软盘镜像</p><p>由于 PVE 不支持 img 文件，我们可以用 <code>scp</code> 或<code>sftp</code> 将镜像上传到 PVE 系统上。</p><p>在 PVE 系统中，<code>/var/lib/vz/template/iso</code> 文件夹是 PVE镜像模版的默认存储位置，建议统一存储在同一位置。</p><p>以下是指令示例：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># SCP</span></span><br><span class="line">scp -O /path/to/file/xxx.img username@remote_ip:/var/lib/vz/template/iso</span><br><span class="line"></span><br><span class="line"><span class="comment"># SFTP</span></span><br><span class="line">sftp username@remote_ip</span><br><span class="line"></span><br><span class="line">sftp&gt; lcd /path/to/file</span><br><span class="line">sftp&gt; put -r xxx.img /var/lib/vz/template/iso</span><br><span class="line">sftp&gt; <span class="built_in">exit</span></span><br><span class="line"></span><br></pre></td></tr></table></figure></li><li><p>创建新的虚拟机</p><p>PVE右上角创建虚拟机，常规按自己喜好设置，操作系统不使用任何介质，系统默认，硬盘2G，CPU类别保持默认，内存512M，网络无网络设备。</p><div class="img-wrap"><div class="img-bg"><img class="img" src="https://kclub-phost-1313107835.cos.ap-nanjing.myqcloud.com/Phost/pvetips/sysinfo.webp" alt="系统信息"/></div><span class="image-caption">系统信息</span></div></li><li><p>PVE Shell 基本操作</p><p>进入 <strong>PVE Shell</strong>，PVE 包含操作虚拟机的指令<code>qm</code>，如下是本文将用到的指令：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 显示虚拟机启动指令</span></span><br><span class="line">qm showcmd &lt;vmid&gt; [options]</span><br><span class="line"></span><br><span class="line"><span class="comment"># 进入虚拟机 kvm 控制台</span></span><br><span class="line">qm monitor &lt;vmid&gt; [options]</span><br><span class="line"></span><br><span class="line"><span class="comment"># 显示虚拟机列表（包含虚拟机PID等基本信息）</span></span><br><span class="line">qm list </span><br></pre></td></tr></table></figure></li><li><p>挂载软盘并引导</p><p>使用 <code>qm list</code>指令，查看刚刚创建的虚拟机的VMID（<em><strong>本文以102举例，请自行替换</strong></em>）</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@truenas[~]# qm list</span><br><span class="line">   VMID NAME                 STATUS     MEM(MB)    BOOTDISK(GB) PID       </span><br><span class="line">    100 HAOS                 running    2048              32.00 1853288   </span><br><span class="line">    101 xenix                stopped    256                0.00 0         </span><br><span class="line">    102 MSDOS7.1             stopped    512                2.00 0         </span><br><span class="line">    103 PureDarwin           running    2048              32.00 139604    </span><br><span class="line">    104 pdxmas               stopped    2048              32.00 0         </span><br></pre></td></tr></table></figure><p>使用 <code>qm showcmd &lt;vmid&gt;</code> 查看 kvm 命令</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@truenas[~]# qm showcmd 102</span><br><span class="line"></span><br><span class="line">/usr/bin/kvm -<span class="built_in">id</span> 102 -name <span class="string">&#x27;MSDOS7.1,debug-threads=on&#x27;</span> -no-shutdown -chardev <span class="string">&#x27;socket,id=qmp,path=/var/run/qemu-server/102.qmp,server=on,wait=off&#x27;</span> -mon <span class="string">&#x27;chardev=qmp,mode=control&#x27;</span> -chardev <span class="string">&#x27;socket,id=qmp-event,path=/var/run/qmeventd.sock,reconnect=5&#x27;</span> -mon <span class="string">&#x27;chardev=qmp-event,mode=control&#x27;</span> -pidfile /var/run/qemu-server/102.pid -daemonize -smbios <span class="string">&#x27;type=1,uuid=464448a0-979e-4af4-9cb6-bf4755594c7b&#x27;</span> -smp <span class="string">&#x27;2,sockets=1,cores=2,maxcpus=2&#x27;</span> -nodefaults -boot <span class="string">&#x27;menu=on,strict=on,reboot-timeout=1000,splash=/usr/share/qemu-server/bootsplash.jpg&#x27;</span> -vnc <span class="string">&#x27;unix:/var/run/qemu-server/102.vnc,password=on&#x27;</span> -cpu qemu64,+aes,enforce,+kvm_pv_eoi,+kvm_pv_unhalt,+pni,+popcnt,+sse4.1,+sse4.2,+ssse3 -m 512 -device <span class="string">&#x27;pci-bridge,id=pci.1,chassis_nr=1,bus=pci.0,addr=0x1e&#x27;</span> -device <span class="string">&#x27;pci-bridge,id=pci.2,chassis_nr=2,bus=pci.0,addr=0x1f&#x27;</span> -device <span class="string">&#x27;pci-bridge,id=pci.3,chassis_nr=3,bus=pci.0,addr=0x5&#x27;</span> -device <span class="string">&#x27;vmgenid,guid=4c87b94b-3216-480b-8308-6c5f5ed9c435&#x27;</span> -device <span class="string">&#x27;piix3-usb-uhci,id=uhci,bus=pci.0,addr=0x1.0x2&#x27;</span> -device <span class="string">&#x27;usb-tablet,id=tablet,bus=uhci.0,port=1&#x27;</span> -device <span class="string">&#x27;VGA,id=vga,bus=pci.0,addr=0x2&#x27;</span> -device <span class="string">&#x27;virtio-balloon-pci,id=balloon0,bus=pci.0,addr=0x3,free-page-reporting=on&#x27;</span> -iscsi <span class="string">&#x27;initiator-name=iqn.1993-08.org.debian:01:33a44c1b79b&#x27;</span> -drive <span class="string">&#x27;file=/dev/zvol/Hack1n-Disk/vm-102-disk-0,if=none,id=drive-ide0,format=raw,cache=none,aio=io_uring,detect-zeroes=on&#x27;</span> -device <span class="string">&#x27;ide-hd,bus=ide.0,unit=0,drive=drive-ide0,id=ide0,bootindex=100&#x27;</span> -drive <span class="string">&#x27;if=none,id=drive-ide2,media=cdrom,aio=io_uring&#x27;</span> -device <span class="string">&#x27;ide-cd,bus=ide.1,unit=0,drive=drive-ide2,id=ide2,bootindex=101&#x27;</span> -machine <span class="string">&#x27;type=pc+pve0&#x27;</span></span><br></pre></td></tr></table></figure><p>在 kvm 中， 软盘挂载参数为 <code>-fda /path/to/file/xxx.img</code> ,如果为 UNIX 系统软盘可能出现无法校验软盘是否存在引导的问题，可以添加参数<code>-no-fd-bootchk</code> 以跳过软盘引导项检查。</p><p>由于 MS DOS 7.1 的加载项可以直接读出，我们不必跳过加载项，直接添加<code>-fda</code> 参数即可，后面改成自己的软盘镜像目录。</p><div class="tip warning"><p>环境因人而异！切勿复制指令！</p></div><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">/usr/bin/kvm -<span class="built_in">id</span> 102 -name <span class="string">&#x27;MSDOS7.1,debug-threads=on&#x27;</span> -no-shutdown -chardev <span class="string">&#x27;socket,id=qmp,path=/var/run/qemu-server/102.qmp,server=on,wait=off&#x27;</span> -mon <span class="string">&#x27;chardev=qmp,mode=control&#x27;</span> -chardev <span class="string">&#x27;socket,id=qmp-event,path=/var/run/qmeventd.sock,reconnect=5&#x27;</span> -mon <span class="string">&#x27;chardev=qmp-event,mode=control&#x27;</span> -pidfile /var/run/qemu-server/102.pid -daemonize -smbios <span class="string">&#x27;type=1,uuid=464448a0-979e-4af4-9cb6-bf4755594c7b&#x27;</span> -smp <span class="string">&#x27;2,sockets=1,cores=2,maxcpus=2&#x27;</span> -nodefaults -boot <span class="string">&#x27;menu=on,strict=on,reboot-timeout=1000,splash=/usr/share/qemu-server/bootsplash.jpg&#x27;</span> -vnc <span class="string">&#x27;unix:/var/run/qemu-server/102.vnc,password=on&#x27;</span> -cpu qemu64,+aes,enforce,+kvm_pv_eoi,+kvm_pv_unhalt,+pni,+popcnt,+sse4.1,+sse4.2,+ssse3 -m 512 -device <span class="string">&#x27;pci-bridge,id=pci.1,chassis_nr=1,bus=pci.0,addr=0x1e&#x27;</span> -device <span class="string">&#x27;pci-bridge,id=pci.2,chassis_nr=2,bus=pci.0,addr=0x1f&#x27;</span> -device <span class="string">&#x27;pci-bridge,id=pci.3,chassis_nr=3,bus=pci.0,addr=0x5&#x27;</span> -device <span class="string">&#x27;vmgenid,guid=4c87b94b-3216-480b-8308-6c5f5ed9c435&#x27;</span> -device <span class="string">&#x27;piix3-usb-uhci,id=uhci,bus=pci.0,addr=0x1.0x2&#x27;</span> -device <span class="string">&#x27;usb-tablet,id=tablet,bus=uhci.0,port=1&#x27;</span> -device <span class="string">&#x27;VGA,id=vga,bus=pci.0,addr=0x2&#x27;</span> -device <span class="string">&#x27;virtio-balloon-pci,id=balloon0,bus=pci.0,addr=0x3,free-page-reporting=on&#x27;</span> -iscsi <span class="string">&#x27;initiator-name=iqn.1993-08.org.debian:01:33a44c1b79b&#x27;</span> -drive <span class="string">&#x27;file=/dev/zvol/Hack1n-Disk/vm-102-disk-0,if=none,id=drive-ide0,format=raw,cache=none,aio=io_uring,detect-zeroes=on&#x27;</span> -device <span class="string">&#x27;ide-hd,bus=ide.0,unit=0,drive=drive-ide0,id=ide0,bootindex=100&#x27;</span> -drive <span class="string">&#x27;if=none,id=drive-ide2,media=cdrom,aio=io_uring&#x27;</span> -device <span class="string">&#x27;ide-cd,bus=ide.1,unit=0,drive=drive-ide2,id=ide2,bootindex=101&#x27;</span> -machine <span class="string">&#x27;type=pc+pve0&#x27;</span> -fda /var/lib/vz/template/iso/msdos/disk01.img</span><br></pre></td></tr></table></figure><p>回车执行，进入我们虚拟机的控制台，在 BIOS引导画面出现时进入引导菜单，选择 Floppy [drive A]</p><div class="img-wrap"><div class="img-bg"><img class="img" src="https://kclub-phost-1313107835.cos.ap-nanjing.myqcloud.com/Phost/pvetips/seabios.webp" alt="提示换盘"/></div><span class="image-caption">提示换盘</span></div></li><li><p>进入qm系统管理器</p><p>进入 <em><strong>PVE</strong></em> 的 Shell，使用<code>qm monitor &lt;vmid&gt;</code> 进入 qm 系统管理器</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@truenas[~]# qm monitor 102</span><br><span class="line"></span><br><span class="line">Entering QEMU Monitor <span class="keyword">for</span> VM 102 - <span class="built_in">type</span> <span class="string">&#x27;help&#x27;</span> <span class="keyword">for</span> <span class="built_in">help</span></span><br><span class="line">qm&gt; </span><br></pre></td></tr></table></figure></li><li><p>查看设备树以查找软盘挂载点</p><p>指令：<code>info qtree</code></p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">qm&gt; info</span><br><span class="line"> bus: main-system-bus</span><br><span class="line"> <span class="built_in">type</span> System</span><br><span class="line"> dev: ps2-mouse, <span class="built_in">id</span> <span class="string">&quot;&quot;</span></span><br><span class="line">     gpio-out <span class="string">&quot;&quot;</span> 1</span><br><span class="line"> dev: ps2-kbd, <span class="built_in">id</span> <span class="string">&quot;&quot;</span></span><br><span class="line">     gpio-out <span class="string">&quot;&quot;</span> 1</span><br><span class="line"> dev: hpet, <span class="built_in">id</span> <span class="string">&quot;&quot;</span></span><br><span class="line">     gpio-in <span class="string">&quot;&quot;</span> 2</span><br><span class="line">     gpio-out <span class="string">&quot;&quot;</span> 1</span><br><span class="line">     gpio-out <span class="string">&quot;sysbus-irq&quot;</span> 32</span><br><span class="line">     timers = 3 (0x3)</span><br><span class="line">     msi = <span class="literal">false</span></span><br><span class="line">     hpet-intcap = 4 (0x4)</span><br><span class="line">     hpet-offset-saved = <span class="literal">true</span></span><br><span class="line">     mmio 00000000fed00000/0000000000000400</span><br><span class="line"> dev: kvm-ioapic, <span class="built_in">id</span> <span class="string">&quot;&quot;</span></span><br><span class="line"> ......</span><br></pre></td></tr></table></figure><p>会生成许多行，耐心找到 <code>floppy</code> 字段，一般在 ISA 总线下的floppy 总线，案例结果如下。</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">dev: isa-fdc, <span class="built_in">id</span> <span class="string">&quot;&quot;</span></span><br><span class="line">         iobase = 1008 (0x3f0)</span><br><span class="line">         irq = 6 (0x6)</span><br><span class="line">         dma = 2 (0x2)</span><br><span class="line">         fdtypeA = <span class="string">&quot;auto&quot;</span></span><br><span class="line">         fdtypeB = <span class="string">&quot;auto&quot;</span></span><br><span class="line">         fallback = <span class="string">&quot;288&quot;</span></span><br><span class="line">         bus: floppy-bus.0</span><br><span class="line">           <span class="built_in">type</span> floppy-bus</span><br><span class="line">           dev: floppy, <span class="built_in">id</span> <span class="string">&quot;&quot;</span></span><br><span class="line">             unit = 0 (0x0)</span><br><span class="line">             drive = <span class="string">&quot;floppy0&quot;</span></span><br><span class="line">             backend_defaults = <span class="string">&quot;auto&quot;</span></span><br><span class="line">             logical_block_size = 512 (512 B)</span><br><span class="line">             physical_block_size = 512 (512 B)</span><br><span class="line">             min_io_size = 0 (0 B)</span><br><span class="line">             opt_io_size = 0 (0 B)</span><br><span class="line">             discard_granularity = 4294967295 (4 GiB)</span><br><span class="line">             write-cache = <span class="string">&quot;auto&quot;</span></span><br><span class="line">             share-rw = <span class="literal">false</span></span><br><span class="line">             account-invalid = <span class="string">&quot;auto&quot;</span></span><br><span class="line">             account-failed = <span class="string">&quot;auto&quot;</span></span><br><span class="line">             drive-type = <span class="string">&quot;144&quot;</span></span><br></pre></td></tr></table></figure><p>我们需要的字段位于设备下的驱动器名，即<code>drive = "floppy0"</code>，现在它挂载的内容为我们引导时<code>-fda</code>参数后面的镜像，我们利用将其更改为系统安装时需要的另一个附加镜像。</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">qm&gt; change floppyID /path/to/file/another_file.img</span><br></pre></td></tr></table></figure><p>对于案例，我们应当执行如下指令：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">qm&gt; change floppy0 /var/lib/vz/template/iso/msdos/disk02.img</span><br></pre></td></tr></table></figure><p>该指令若执行正确无任何返回内容，我们直接返回系统，继续安装步骤即可，如此换盘完成。</p></li></ol><h3 id="完成安装">完成安装</h3><p>按照提示继续后续的安装步骤，重启并通过硬盘引导入 MS DOS。</p><div class="img-wrap"><div class="img-bg"><img class="img" src="https://kclub-phost-1313107835.cos.ap-nanjing.myqcloud.com/Phost/pvetips/install.webp" alt="最后的安装步骤"/></div><span class="image-caption">最后的安装步骤</span></div><div class="img-wrap"><div class="img-bg"><img class="img" src="https://kclub-phost-1313107835.cos.ap-nanjing.myqcloud.com/Phost/pvetips/installed.webp" alt="安装成功"/></div><span class="image-caption">安装成功</span></div><h2 id="troubshooting">TroubShooting</h2><p>暂无，欢迎在评论区留言指出。</p><h2 id="结语">结语</h2><p>MS DOS 还是很经典而且好玩滴，嘿嘿.</p><p>后续更新如何在 PVE 安装基于 macOS 开源内核的社区版本 PureDarwin预览版系统的教程，欢迎收藏网站关注后续更新。</p>]]></content>
      
      
      <categories>
          
          <category> 瞎玩折腾 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> PVE </tag>
            
            <tag> 系统怀旧 </tag>
            
            <tag> MSDOS </tag>
            
            <tag> qemu-kvm </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>jQuery + Bootstrap实现合法性检测和加载进度条</title>
      <link href="/2023/11/28/Bootstrap-jQuery%E5%8A%A0%E8%BD%BD%E8%BF%9B%E5%BA%A6%E6%9D%A1/"/>
      <url>/2023/11/28/Bootstrap-jQuery%E5%8A%A0%E8%BD%BD%E8%BF%9B%E5%BA%A6%E6%9D%A1/</url>
      
        <content type="html"><![CDATA[<h2 id="前言">前言</h2><p>今天在看 BootStrap文档时，看到了进度条，但是所给的Demo都是静态的，并没有说明如何利用js控制。百度一圈也无果，大多都是自己手搓一个进度条。但是既然 BootStrap官方都提供进度条了，不用白不用，刚好网上相关的教程较少，难度不难，适合我这种新手博主<del>水文章</del>，若有不对之处还请大佬指正。那么正文开始。</p><h2 id="实现方法">实现方法</h2><h3 id="环境">环境</h3><ol type="1"><li>BootStrap v5.3.2</li><li>jQuery v3.7</li><li>一个后端用于接收请求</li></ol><h3 id="servlet">Servlet</h3><p>由于这是个前端教程，默认有个后端用于接收和响应 POST 数据，我自己用Servlet 写的，请自己写一个吧～（不影响下文逻辑）</p><h3 id="html">HTML</h3><p>我们先快速写一个 BootStrap表单，并包含提交、进度条及一定程度的强制类型，记得引入 BootStrap 。</p><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;container&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">&lt;!-- 表单部分 不要通过这里的action提交表单 我们在js中利用 XMLHttpRequest() 方法实现--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">form</span> <span class="attr">method</span>=<span class="string">&quot;post&quot;</span> <span class="attr">id</span>=<span class="string">&quot;add&quot;</span> <span class="attr">class</span>=<span class="string">&quot;needs-validation&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;mb-3&quot;</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">&quot;fName&quot;</span> <span class="attr">class</span>=<span class="string">&quot;form-label&quot;</span>&gt;</span>名称<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">                <span class="comment">&lt;!-- require 强制要求填写 maxlength 最大长度限定--&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">class</span>=<span class="string">&quot;form-control&quot;</span> <span class="attr">id</span>=<span class="string">&quot;fName&quot;</span> <span class="attr">name</span>=<span class="string">&quot;fName&quot;</span> <span class="attr">maxlength</span>=<span class="string">&quot;10&quot;</span> <span class="attr">placeholder</span>=<span class="string">&quot;一次一个&quot;</span> <span class="attr">required</span>&gt;</span></span><br><span class="line">                <span class="comment">&lt;!-- 非法状态下返回值 --&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;invalid-feedback&quot;</span>&gt;</span></span><br><span class="line">                    请输入正确的名称</span><br><span class="line">                <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;mb-3&quot;</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">&quot;fPrice&quot;</span> <span class="attr">class</span>=<span class="string">&quot;form-label&quot;</span>&gt;</span>单价<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">                <span class="comment">&lt;!-- type 强制类型为数字 --&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;number&quot;</span> <span class="attr">class</span>=<span class="string">&quot;form-control&quot;</span> <span class="attr">id</span>=<span class="string">&quot;fPrice&quot;</span> <span class="attr">name</span>=<span class="string">&quot;fPrice&quot;</span> <span class="attr">placeholder</span>=<span class="string">&quot;请输入单价（罗马数字）&quot;</span> <span class="attr">required</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;invalid-feedback&quot;</span>&gt;</span></span><br><span class="line">                    请输入正确的单价</span><br><span class="line">                <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">            <span class="comment">&lt;!-- 提交按钮 --&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;px-4 text-center&quot;</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;row gx-5&quot;</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;col&quot;</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;p-3&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">button</span> <span class="attr">type</span>=<span class="string">&quot;submit&quot;</span> <span class="attr">class</span>=<span class="string">&quot;btn btn-primary&quot;</span> <span class="attr">id</span>=<span class="string">&quot;submit&quot;</span>&gt;</span>Submit<span class="tag">&lt;/<span class="name">button</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">            <span class="comment">&lt;!-- 进度条部分 目前值0 最小值0 最大值100--&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;progress&quot;</span> <span class="attr">role</span>=<span class="string">&quot;progressbar&quot;</span> <span class="attr">aria-label</span>=<span class="string">&quot;Animated striped example&quot;</span> <span class="attr">aria-valuenow</span>=<span class="string">&quot;0&quot;</span> <span class="attr">aria-valuemin</span>=<span class="string">&quot;0&quot;</span> <span class="attr">aria-valuemax</span>=<span class="string">&quot;100&quot;</span>&gt;</span></span><br><span class="line">                <span class="comment">&lt;!-- 进度条内部 从0开始 --&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;progress-bar progress-bar-striped progress-bar-animated&quot;</span> <span class="attr">style</span>=<span class="string">&quot;width: 0&quot;</span>&gt;</span>0%<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure><p>这部分 HTML 主要实现了最基础的页面框架，基本上都是 Bootstrap官方文档包含的内容接下来我们要实现<strong>当点击按钮后，进度条加载，加载完成后跳转</strong> 的操作，也就是本文的核心内容。</p><h3 id="javascript">JavaScript</h3><div class="tip info"><p>记得引入 Bootstrap 及 jQuery。</p></div><ol type="1"><li><p>我们首先来实现合法性检测，Bootstrap 官方有个很好的案例平常我们写<del>垃圾</del>代码时更多会选择直接使用简单的 DOM 配合 if语句判断，但这个案例很好的用到了 checkValidity() 方法，值得我们学习</p><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">// Example starter JavaScript for disabling form submissions if there are invalid fields</span></span><br><span class="line"> (<span class="function">() =&gt;</span> &#123;</span><br><span class="line">     <span class="string">&#x27;use strict&#x27;</span></span><br><span class="line"></span><br><span class="line">     <span class="comment">// Fetch all the forms we want to apply custom Bootstrap validation styles to</span></span><br><span class="line">     <span class="keyword">const</span> forms = <span class="variable language_">document</span>.<span class="title function_">querySelectorAll</span>(<span class="string">&#x27;.needs-validation&#x27;</span>)</span><br><span class="line"></span><br><span class="line">     <span class="comment">// Loop over them and prevent submission</span></span><br><span class="line">     <span class="title class_">Array</span>.<span class="title function_">from</span>(forms).<span class="title function_">forEach</span>(<span class="function"><span class="params">form</span> =&gt;</span> &#123;</span><br><span class="line">         form.<span class="title function_">addEventListener</span>(<span class="string">&#x27;submit&#x27;</span>, <span class="function"><span class="params">event</span> =&gt;</span> &#123;</span><br><span class="line">             <span class="keyword">if</span> (!form.<span class="title function_">checkValidity</span>()) &#123;</span><br><span class="line">                 event.<span class="title function_">preventDefault</span>()</span><br><span class="line">                 event.<span class="title function_">stopPropagation</span>()</span><br><span class="line">             &#125;</span><br><span class="line"></span><br><span class="line">             form.<span class="property">classList</span>.<span class="title function_">add</span>(<span class="string">&#x27;was-validated&#x27;</span>)</span><br><span class="line">         &#125;, <span class="literal">false</span>)</span><br><span class="line">     &#125;)</span><br><span class="line"> &#125;)()</span><br></pre></td></tr></table></figure></li><li><p>加载进度条</p> <figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 初始化变量</span></span><br><span class="line"><span class="keyword">let</span> num = <span class="number">0</span> <span class="comment">// 计数器</span></span><br><span class="line"><span class="keyword">let</span> p1 = $(<span class="string">&quot;.progress-bar&quot;</span>) <span class="comment">// 进度条</span></span><br><span class="line"><span class="comment">// 引入 html form 参量</span></span><br><span class="line"><span class="keyword">let</span> name = $(<span class="string">&quot;#fName&quot;</span>)</span><br><span class="line"><span class="keyword">let</span> price = $(<span class="string">&quot;#fPrice&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">// click 事件</span></span><br><span class="line">$(<span class="string">&quot;#submit&quot;</span>).<span class="title function_">click</span>(<span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">    <span class="keyword">if</span> (name[<span class="number">0</span>].<span class="title function_">checkValidity</span>() &amp;&amp; price[<span class="number">0</span>].<span class="title function_">checkValidity</span>()) &#123;</span><br><span class="line">        <span class="comment">// 创建 XMLHttpRequest 并 初始化， 后端接口: add， POST 方法: 表格</span></span><br><span class="line">        <span class="keyword">let</span> xmlHttpResp = <span class="keyword">new</span> <span class="title class_">XMLHttpRequest</span>()</span><br><span class="line">        xmlHttpResp.<span class="title function_">open</span>(<span class="string">&quot;POST&quot;</span>, <span class="string">&quot;/add&quot;</span>, <span class="literal">true</span>)</span><br><span class="line">        xmlHttpResp.<span class="title function_">setRequestHeader</span>(<span class="string">&quot;Content-Type&quot;</span>, <span class="string">&quot;application/x-www-form-urlencoded&quot;</span>)</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 重新格式化一下</span></span><br><span class="line">        <span class="keyword">let</span> params = <span class="string">&quot;fName=&quot;</span> + name.<span class="title function_">val</span>() + <span class="string">&quot;&amp;fPrice=&quot;</span> + price.<span class="title function_">val</span>()</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 绑定响应状态事件监听函数， 状态码正常返回 后端返回值</span></span><br><span class="line">        xmlHttpResp.<span class="property">onreadystatechange</span> = <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">            <span class="keyword">if</span> (xmlHttpResp.<span class="property">readyState</span> === <span class="number">4</span>) &#123;</span><br><span class="line">                <span class="keyword">if</span> (xmlHttpResp.<span class="property">status</span> === <span class="number">200</span> || xmlHttpResp.<span class="property">status</span> === <span class="number">0</span>) &#123;</span><br><span class="line">                    <span class="comment">// 获取 result</span></span><br><span class="line">                    <span class="keyword">let</span> result = xmlHttpResp.<span class="property">responseText</span></span><br><span class="line"></span><br><span class="line">                    <span class="comment">// 定时器 根据 result 判断</span></span><br><span class="line">                    <span class="keyword">const</span> timer = <span class="built_in">setInterval</span>(<span class="keyword">async</span> <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">                        p1.<span class="title function_">css</span>(<span class="string">&quot;width&quot;</span>, num + <span class="string">&quot;%&quot;</span>)</span><br><span class="line">                        p1.<span class="title function_">text</span>(num + <span class="string">&quot;%&quot;</span>)</span><br><span class="line">                        <span class="keyword">if</span> (num === <span class="number">100</span>) &#123;</span><br><span class="line">                            <span class="keyword">if</span> (result) &#123;</span><br><span class="line">                                <span class="built_in">clearInterval</span>(timer)</span><br><span class="line">                                p1.<span class="title function_">text</span>(<span class="string">&quot;添加成功✅&quot;</span>)</span><br><span class="line">                                <span class="keyword">await</span> <span class="title function_">sleep</span>(<span class="number">3000</span>)</span><br><span class="line">                                <span class="variable language_">window</span>.<span class="property">location</span>.<span class="property">href</span> = <span class="string">&quot;/index.html&quot;</span></span><br><span class="line">                            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                                <span class="built_in">clearInterval</span>(timer)</span><br><span class="line">                                p1.<span class="title function_">text</span>(<span class="string">&quot;添加失败😭&quot;</span>)</span><br><span class="line">                            &#125;</span><br><span class="line">                        &#125;</span><br><span class="line">                        num++</span><br><span class="line">                    &#125;, <span class="number">10</span>);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// 提交 POST</span></span><br><span class="line">        xmlHttpResp.<span class="title function_">send</span>(params)</span><br><span class="line"></span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="comment">// 记录异常</span></span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;可能存在的，未知 参数 错误&#x27;</span>)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line"><span class="comment">// sleep</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">sleep</span>(<span class="params">delay</span>) &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">Promise</span>(<span class="function"><span class="params">resolve</span> =&gt;</span> &#123;</span><br><span class="line">        <span class="built_in">setTimeout</span>(resolve, delay)</span><br><span class="line">    &#125;)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这一步利用 <code>XMLHttpRequest()</code> 方法实现了 POST的同时，让后端返回一个返回值，利用返回值判断是否成功。 之后利用<code>setInterval()</code>方法做计时器使得进度条累加（<del>伪进度条，只是个动画效果</del>），根据<code>result</code> 返回来的值来确认是否成功提交。最后设置一个<code>sleep</code>, 让线程睡眠 3秒，实现等待的效果，为了防止阻塞，故用到了 <code>async</code>， 以上就是Bootstrap 进度条的简单应用。</p></li></ol><h2 id="troubshooting">TroubShooting</h2><ol type="1"><li><p>DOM 的 <code>document.getElementById("id")</code> 和 jQuery 的<code>$("#id")</code> 是有区别的</p><p>在网上查找资料时，看到一种说法是这两个方法是一样的，但其实，<em><strong>前者获取到的是元素</strong></em>，而 <em><strong>后者获取到的是HTMLCollection</strong></em>。</p><p>后者(即jQuery)获取元素及值的方法如下:</p> <figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">let</span> id =  $(<span class="string">&quot;#id&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">//获取元素</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(id[<span class="number">0</span>])</span><br><span class="line"></span><br><span class="line"><span class="comment">//获取值</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(id.<span class="title function_">val</span>())</span><br></pre></td></tr></table></figure></li></ol><h2 id="结语">结语</h2><p>写这篇文章的初衷是因为网上 <psw>度娘</psw>的教程很多内容是错的，而且出现了大量文章都出自同一个作者，一人错处处错，让我看得特别难受，虽然内容都是基础内容，但这也大大增高了新同学的学习门槛。但同时我也深知我的文章写的不够优秀，只希望倘若能有一位同学看懂了，少走些弯路，也不乏是件好事，但若是我有出错之处，还请在评论区指正。这是我第一次写这类博客，希望我自己未来在精进代码能力的同时，也不断提高博客写作水平，以带给大家更好的内容为基准点，不断向更高处前进。</p><p>感谢每一位读完这篇博文的朋友们，这是我这个域名认真写的第一篇技术类文章，即是我上一段旅途的重点，亦是我这一段行程的起点，是每一个阅读量促使着我一步步走到现在，衷心地感谢你们，最后，用我最喜欢的一句话，我的座右铭，祝愿大家，<em><strong>Levent se lève, il faut tenter devivre（纵使疾风起，人生不言弃）</strong></em>。</p><h2 id="参考文献">参考文献</h2><ul><li>Bootstrap v5 Validation:<ahref="https://v5.bootcss.com/docs/forms/validation/#custom-styles">https://v5.bootcss.com/docs/forms/validation/#custom-styles</a></li><li>JS XMLHttpRequest入门教程（非常详细）:<ahref="https://c.biancheng.net/view/5995.html">https://c.biancheng.net/view/5995.html</a></li><li>【Javaweb】【Js】【Servlet】Js与Servlet交互 -Js请求Servlet与响应Servlet [原生JS][POST]请求和响应（一）:<ahref="https://www.cnblogs.com/mllt/p/javaweb_js_servlet_post_20211226.html">https://www.cnblogs.com/mllt/p/javaweb_js_servlet_post_20211226.html</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> 编程开发 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 前端 </tag>
            
            <tag> Web </tag>
            
            <tag> jQuery </tag>
            
            <tag> Bootstrap </tag>
            
            <tag> JavaScript </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>在TrueNAS系统中安装PVE内核</title>
      <link href="/2023/11/25/%E5%9C%A8TrueNAS%E7%B3%BB%E7%BB%9F%E4%B8%AD%E5%AE%89%E8%A3%85PVE%E5%86%85%E6%A0%B8/"/>
      <url>/2023/11/25/%E5%9C%A8TrueNAS%E7%B3%BB%E7%BB%9F%E4%B8%AD%E5%AE%89%E8%A3%85PVE%E5%86%85%E6%A0%B8/</url>
      
        <content type="html"><![CDATA[<h2 id="前言">前言</h2><p>在NAS存储系统中，TrueNAS Scale 的可玩性非常的高，包括 K3s,Docker等容器服务及虚拟化服务等也一应俱全。但在虚拟化系统中，仍然有一个更强的存在，那就是PVE(Proxmox VE) 。当然，我们可以选择PVE套虚拟化 TrueNAS Scale , 或者TrueNAS Scale 套虚拟化 PVE， 但都会有一定的损耗。但是我发现无论是 PVE还是 TrueNAS Scale, 都是基于 Debian系统的，那么有没有可能同时在物理机上跑起来 PVE 和 TrueNAS Scale呢？经过我 <em><strong>一小时</strong></em>的简单摸索，给出了如下方案。</p><div class="tip warning"><p>注意：本文仅为实验性测试，不保证安装后TrueNAS Scale稳定性</p></div><h2 id="解决方案">解决方案</h2><div class="tip info"><p>基于 Debian 12 AMD64</p></div><h3 id="1-更改-truenas-设置">1. 更改 TrueNAS 设置</h3><ol type="1"><li><p>打开 TrueNAS SSH</p><ol type="1"><li>进入你的 TrueNAS 管理面板</li><li>系统设置 -&gt; 服务 -&gt; SSH, 运行中与自启打勾</li><li>用户凭证 -&gt; root -&gt; 编辑 -&gt;禁用密码取消打勾，并在下方设置密码</li><li>SSH 登录 TrueNAS</li></ol></li><li><p>给予 root 用户权限</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">chmod</span> +x /usr/bin/*</span><br><span class="line"><span class="built_in">chmod</span> +x /usr/sbin/*</span><br></pre></td></tr></table></figure></li></ol><h3 id="2-更改-hosts">2. 更改 Hosts</h3><p>一般情况下主机名通过 <code>/etc/hosts</code> 解析。默认的Hosts文件可能如下：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">127.0.0.1       truenas.local truenas   </span><br><span class="line"><span class="comment"># 这里是默认的truenas hostname, 也可能是你所设置的hostname</span></span><br><span class="line"><span class="comment"># 查看位置： TrueNAS Web 仪表盘 -&gt; 主机名</span></span><br><span class="line">127.0.0.1       localhost</span><br><span class="line"></span><br><span class="line"><span class="comment"># The following lines are desirable for IPv6 capable hosts</span></span><br><span class="line">::1     localhost ip6-localhost ip6-loopback</span><br><span class="line">ff02::1 ip6-allnodes</span><br><span class="line">ff02::2 ip6-allrouters</span><br><span class="line"></span><br><span class="line"><span class="comment"># STATIC ENTRIES</span></span><br></pre></td></tr></table></figure><p>我们需要把第一行主机名解析成网口上的IP（上游DHCP所分配的IP，一般默认为静态）并且要把第一行放到第二行下，如下：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">127.0.0.1       localhost</span><br><span class="line">192.168.31.138  truenas.local truenas</span><br><span class="line"></span><br><span class="line"><span class="comment"># The following lines are desirable for IPv6 capable hosts</span></span><br><span class="line">::1     localhost ip6-localhost ip6-loopback</span><br><span class="line">ff02::1 ip6-allnodes</span><br><span class="line">ff02::2 ip6-allrouters</span><br><span class="line"></span><br><span class="line"><span class="comment"># STATIC ENTRIES</span></span><br></pre></td></tr></table></figure><p>若您不知道自己的IP地址也可以使用如下指令：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">hostname --ip-address</span><br><span class="line">192.168.31.138 <span class="comment"># 这里应该会返回您的IP地址</span></span><br></pre></td></tr></table></figure><p>为了防止 TrueNAS 开机自动替换 Hosts 文件，还需要做以下操作：</p><ol type="1"><li><p>复制正常的hosts文件，然后配置开机脚本，进行替换。</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cp</span> /etc/hosts /opt</span><br></pre></td></tr></table></figure></li><li><p>添加一个启动脚本。</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">echo</span> <span class="string">&#x27;#!/bin/bash&#x27;</span> &gt;&gt;/etc/rc.local</span><br><span class="line"><span class="built_in">echo</span> <span class="string">&#x27;cp /opt/hosts /etc/hosts &amp;&amp; systemctl start pvestatd&#x27;</span> &gt;&gt;/etc/rc.local</span><br></pre></td></tr></table></figure></li><li><p>给脚本执行权限。</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">chmod</span> +x /etc/rc.local</span><br></pre></td></tr></table></figure></li></ol><h3 id="3-添加-pve-源并更新">3. 添加 PVE 源并更新</h3><ol type="1"><li><p>在终端执行如下指令之一，若国内访问建议使用<em><strong>国内源</strong></em></p><ul><li><p>官方源：</p>  <figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">echo</span> <span class="string">&quot;deb [arch=amd64] http://download.proxmox.com/debian/pve bookworm pve-no-subscription&quot;</span> &gt; /etc/apt/sources.list.d/pve-install-repo.list</span><br><span class="line">wget https://enterprise.proxmox.com/debian/proxmox-release-bookworm.gpg -O /etc/apt/trusted.gpg.d/proxmox-release-bookworm.gpg </span><br></pre></td></tr></table></figure></li><li><p>国内源：</p>  <figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">echo</span> <span class="string">&quot;deb [arch=amd64] http://mirrors.ustc.edu.cn/proxmox/debian/pve bookworm pve-no-subscription&quot;</span> &gt; /etc/apt/sources.list.d/pve-install-repo.list</span><br><span class="line">wget https://mirrors.ustc.edu.cn/proxmox/debian/proxmox-release-bookworm.gpg -O /etc/apt/trusted.gpg.d/proxmox-release-bookworm.gpg</span><br></pre></td></tr></table></figure></li></ul></li><li><p>更新系统软件包：</p> <figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">apt -y update &amp;&amp; apt -y full-upgrade</span><br></pre></td></tr></table></figure><p>您的系统可能会有如下警告，是由于TrueNAS系统的软件包PublicKey放到了默认的文件中，但Debian官方不建议这么做，可以忽视：</p> <figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">W: http://apt.tn.ixsystems.com/apt-direct/cobia/23.10.0/pcm/dists/bookworm/InRelease: Key is stored <span class="keyword">in</span> legacy trusted.gpg keyring (/etc/apt/trusted.gpg), see the DEPRECATION section <span class="keyword">in</span> apt-key(8) <span class="keyword">for</span> details.</span><br></pre></td></tr></table></figure><p>同时还会有一条PVE软件包的错误，是由于没有企业认证，不影响公开软件包，可以忽视：</p> <figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">E: Failed to fetch https://enterprise.proxmox.com/debian/pve/dists/bookworm/InRelease  401  Unauthorized [IP: 103.76.41.50 443]</span><br></pre></td></tr></table></figure></li></ol><h3 id="4-更改-initramfs-zfs-挂钩脚本">4. 更改 initramfs zfs挂钩脚本</h3><ol type="1"><li><p>执行以下脚本，将 <code>MODULES=most</code> 添加至<code>/usr/share/initramfs-tools/conf-hooks.d/zfs</code> 文件：</p> <figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">echo</span> <span class="string">&quot;MODULES=most&quot;</span> &gt;&gt; /usr/share/initramfs-tools/conf-hooks.d/zfs</span><br></pre></td></tr></table></figure></li><li><p>安装过程中可能会找不到 <code>modules</code>文件，不影响安装，也可以自己 touch 一个：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">touch</span> /etc/initramfs-tools/modules</span><br></pre></td></tr></table></figure></li></ol><h3 id="5-安装-pve-内核">5. 安装 PVE 内核</h3><p>不多说，直接 Bash 命令安装：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">apt install pve-kernel-6.2</span><br><span class="line"></span><br><span class="line">systemctl reboot <span class="comment">#重启系统</span></span><br></pre></td></tr></table></figure><h3 id="6-安装-pve-包">6. 安装 PVE 包</h3><p>若上一部正常安装完成，没有任何 Error ,我们就可以正式安装 PVE环境了！</p><ol type="1"><li><p>卸载不兼容的包</p> <figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">apt autoremove -y  qemu-system-common qemu-system-data qemu-system-gui qemu-system-x86 qemu-utils</span><br></pre></td></tr></table></figure></li><li><p>安装 PVE</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">apt update &amp;&amp; apt --no-install-recommends --no-install-suggests install proxmox-ve openssl open-iscsi chrony</span><br><span class="line"><span class="comment"># PVE 官方安装了 postfix 邮件收发服务器，但是与 TrueNAS 的 exim4 不兼容，故未安装</span></span><br></pre></td></tr></table></figure></li><li><p>您可以删除为安装添加的无订阅存储库。</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">rm</span> /etc/apt/sources.list.d/pve-install-repo.list</span><br></pre></td></tr></table></figure></li><li><p>建议：删除 os-prober</p><p>os-prober 软件包扫描主机的所有分区以创建双引导 GRUB条目。但扫描的分区还可以包括分配给虚拟机的分区，而虚拟机不希望将其添加为启动项。</p> <div class="tip warning"><p>在您未配置双系统或多系统的前提下，可安全执行删除命令</p></div> <figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">apt remove os-prober</span><br></pre></td></tr></table></figure></li></ol><h3 id="7-配置-pve-网络">7. 配置 PVE 网络</h3><ol type="1"><li><p>登录 PVE</p><p><code>ip:8006</code></p></li><li><p>数据中心下方 truenas -&gt; 系统 -&gt; 网络 -&gt; 创建 -&gt; LinuxBridge</p><div class="img-wrap"><div class="img-bg"><img class="img" src="https://phost.kclub.tech/file/e73daf6bde9c9e4920d08.png" alt="编辑:Linux Bridge"/></div><span class="image-caption">编辑:Linux Bridge</span></div><p>其中，IPv4填写你的主机IP地址（大多为您面板的访问IP），网关填写您上级路由网关，桥接端口填写分配地址的网口名称。</p><p>若为多网口设备，请参考司波图 PVE AIO 教程：<ahref="https://gitee.com/spoto/PVE_Generic_AIO/tree/master/0%E3%80%81%E5%88%9B%E5%BB%BA%E8%BD%AF%E8%B7%AF%E7%94%B1%E8%99%9A%E6%8B%9F%E6%9C%BA#%E8%AF%86%E5%88%AB%E7%BD%91%E5%8F%A3">https://gitee.com/spoto/PVE_Generic_AIO</a></p></li></ol><h3 id="8-pve-挂载-truenas-zfspool">8. PVE 挂载 TrueNAS zfspool</h3><ol type="1"><li>数据中心 -&gt; 存储 -&gt; 添加 zfs ， ID随便写一个方便记忆的，zfs池选择想要挂载的zfs池。</li><li>完成（我也不知道为啥我要分两条）。</li></ol><h2 id="troubleshooting">Troubleshooting</h2><ol type="1"><li><p>PVE 内核启动失败</p><p>如果内核启动失败，错误日志为<code>error: bad shim signature.</code>。</p><p>确保 BIOS 中 <code>Secure Boot(安全启动)</code> 为关闭状态。</p></li><li><p>ipcc_send_rec[1] failed</p><p>如果你看到类似的日志：<code>ipcc_send_rec[1] failed: Connection refused</code></p><p>请确保你的 <code>/etc/hosts</code> 文件配置正确。</p></li><li><p>由于 NTPsec Hook 导致网络启动失败</p><p>安装 chrony 代替原本的NTP服务</p><p><code>apt install chrony</code></p></li><li><p>RRD错误</p><p>表现在PVE的监控不正确，如时间异常。</p><p>解决方法:创建一个rrd文件夹</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">mkdir</span> -p /var/lib/rrdcached/db/</span><br><span class="line">systemctl restart pvedaemon</span><br></pre></td></tr></table></figure></li></ol><h2 id="参考资料">参考资料</h2><ol type="1"><li>Install Proxmox VE on Debian 12 Bookworm:<ahref="https://pve.proxmox.com/wiki/Install_Proxmox_VE_on_Debian_12_Bookworm">https://pve.proxmox.com/wiki/Install_Proxmox_VE_on_Debian_12_Bookworm</a></li><li>TrueNAS scale 集成PVE:<ahref="https://foxi.buduanwang.vip/virtualization/pve/2901.html/">https://foxi.buduanwang.vip/virtualization/pve/2901.html/</a></li><li>司波图 / 通用PVE AIO安装教程:<ahref="https://gitee.com/spoto/PVE_Generic_AIO">https://gitee.com/spoto/PVE_Generic_AIO</a></li></ol>]]></content>
      
      
      <categories>
          
          <category> 瞎玩折腾 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> NAS </tag>
            
            <tag> PVE </tag>
            
            <tag> TrueNAS </tag>
            
            <tag> zfspool </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
